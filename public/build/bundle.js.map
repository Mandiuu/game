{"version":3,"file":"bundle.js","sources":["../../node_modules/svelte/src/runtime/internal/utils.js","../../node_modules/svelte/src/runtime/internal/environment.js","../../node_modules/svelte/src/runtime/internal/loop.js","../../node_modules/svelte/src/runtime/internal/dom.js","../../node_modules/svelte/src/runtime/internal/style_manager.js","../../node_modules/svelte/src/runtime/internal/lifecycle.js","../../node_modules/svelte/src/runtime/internal/scheduler.js","../../node_modules/svelte/src/runtime/internal/transitions.js","../../node_modules/svelte/src/runtime/internal/each.js","../../node_modules/svelte/src/runtime/internal/Component.js","../../node_modules/svelte/src/runtime/transition/index.js","../../node_modules/svelte/src/runtime/internal/disclose-version/index.js","../../node_modules/svelte/src/shared/version.js","../../node_modules/canvas-confetti/dist/confetti.module.mjs","../../src/App.svelte","../../src/main.js"],"sourcesContent":["/** @returns {void} */\nexport function noop() {}\n\nexport const identity = (x) => x;\n\n/**\n * @template T\n * @template S\n * @param {T} tar\n * @param {S} src\n * @returns {T & S}\n */\nexport function assign(tar, src) {\n\t// @ts-ignore\n\tfor (const k in src) tar[k] = src[k];\n\treturn /** @type {T & S} */ (tar);\n}\n\n// Adapted from https://github.com/then/is-promise/blob/master/index.js\n// Distributed under MIT License https://github.com/then/is-promise/blob/master/LICENSE\n/**\n * @param {any} value\n * @returns {value is PromiseLike<any>}\n */\nexport function is_promise(value) {\n\treturn (\n\t\t!!value &&\n\t\t(typeof value === 'object' || typeof value === 'function') &&\n\t\ttypeof (/** @type {any} */ (value).then) === 'function'\n\t);\n}\n\n/** @returns {void} */\nexport function add_location(element, file, line, column, char) {\n\telement.__svelte_meta = {\n\t\tloc: { file, line, column, char }\n\t};\n}\n\nexport function run(fn) {\n\treturn fn();\n}\n\nexport function blank_object() {\n\treturn Object.create(null);\n}\n\n/**\n * @param {Function[]} fns\n * @returns {void}\n */\nexport function run_all(fns) {\n\tfns.forEach(run);\n}\n\n/**\n * @param {any} thing\n * @returns {thing is Function}\n */\nexport function is_function(thing) {\n\treturn typeof thing === 'function';\n}\n\n/** @returns {boolean} */\nexport function safe_not_equal(a, b) {\n\treturn a != a ? b == b : a !== b || (a && typeof a === 'object') || typeof a === 'function';\n}\n\nlet src_url_equal_anchor;\n\n/**\n * @param {string} element_src\n * @param {string} url\n * @returns {boolean}\n */\nexport function src_url_equal(element_src, url) {\n\tif (element_src === url) return true;\n\tif (!src_url_equal_anchor) {\n\t\tsrc_url_equal_anchor = document.createElement('a');\n\t}\n\t// This is actually faster than doing URL(..).href\n\tsrc_url_equal_anchor.href = url;\n\treturn element_src === src_url_equal_anchor.href;\n}\n\n/** @param {string} srcset */\nfunction split_srcset(srcset) {\n\treturn srcset.split(',').map((src) => src.trim().split(' ').filter(Boolean));\n}\n\n/**\n * @param {HTMLSourceElement | HTMLImageElement} element_srcset\n * @param {string | undefined | null} srcset\n * @returns {boolean}\n */\nexport function srcset_url_equal(element_srcset, srcset) {\n\tconst element_urls = split_srcset(element_srcset.srcset);\n\tconst urls = split_srcset(srcset || '');\n\n\treturn (\n\t\turls.length === element_urls.length &&\n\t\turls.every(\n\t\t\t([url, width], i) =>\n\t\t\t\twidth === element_urls[i][1] &&\n\t\t\t\t// We need to test both ways because Vite will create an a full URL with\n\t\t\t\t// `new URL(asset, import.meta.url).href` for the client when `base: './'`, and the\n\t\t\t\t// relative URLs inside srcset are not automatically resolved to absolute URLs by\n\t\t\t\t// browsers (in contrast to img.src). This means both SSR and DOM code could\n\t\t\t\t// contain relative or absolute URLs.\n\t\t\t\t(src_url_equal(element_urls[i][0], url) || src_url_equal(url, element_urls[i][0]))\n\t\t)\n\t);\n}\n\n/** @returns {boolean} */\nexport function not_equal(a, b) {\n\treturn a != a ? b == b : a !== b;\n}\n\n/** @returns {boolean} */\nexport function is_empty(obj) {\n\treturn Object.keys(obj).length === 0;\n}\n\n/** @returns {void} */\nexport function validate_store(store, name) {\n\tif (store != null && typeof store.subscribe !== 'function') {\n\t\tthrow new Error(`'${name}' is not a store with a 'subscribe' method`);\n\t}\n}\n\nexport function subscribe(store, ...callbacks) {\n\tif (store == null) {\n\t\tfor (const callback of callbacks) {\n\t\t\tcallback(undefined);\n\t\t}\n\t\treturn noop;\n\t}\n\tconst unsub = store.subscribe(...callbacks);\n\treturn unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\n\n/**\n * Get the current value from a store by subscribing and immediately unsubscribing.\n *\n * https://svelte.dev/docs/svelte-store#get\n * @template T\n * @param {import('../store/public.js').Readable<T>} store\n * @returns {T}\n */\nexport function get_store_value(store) {\n\tlet value;\n\tsubscribe(store, (_) => (value = _))();\n\treturn value;\n}\n\n/** @returns {void} */\nexport function component_subscribe(component, store, callback) {\n\tcomponent.$$.on_destroy.push(subscribe(store, callback));\n}\n\nexport function create_slot(definition, ctx, $$scope, fn) {\n\tif (definition) {\n\t\tconst slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n\t\treturn definition[0](slot_ctx);\n\t}\n}\n\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n\treturn definition[1] && fn ? assign($$scope.ctx.slice(), definition[1](fn(ctx))) : $$scope.ctx;\n}\n\nexport function get_slot_changes(definition, $$scope, dirty, fn) {\n\tif (definition[2] && fn) {\n\t\tconst lets = definition[2](fn(dirty));\n\t\tif ($$scope.dirty === undefined) {\n\t\t\treturn lets;\n\t\t}\n\t\tif (typeof lets === 'object') {\n\t\t\tconst merged = [];\n\t\t\tconst len = Math.max($$scope.dirty.length, lets.length);\n\t\t\tfor (let i = 0; i < len; i += 1) {\n\t\t\t\tmerged[i] = $$scope.dirty[i] | lets[i];\n\t\t\t}\n\t\t\treturn merged;\n\t\t}\n\t\treturn $$scope.dirty | lets;\n\t}\n\treturn $$scope.dirty;\n}\n\n/** @returns {void} */\nexport function update_slot_base(\n\tslot,\n\tslot_definition,\n\tctx,\n\t$$scope,\n\tslot_changes,\n\tget_slot_context_fn\n) {\n\tif (slot_changes) {\n\t\tconst slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n\t\tslot.p(slot_context, slot_changes);\n\t}\n}\n\n/** @returns {void} */\nexport function update_slot(\n\tslot,\n\tslot_definition,\n\tctx,\n\t$$scope,\n\tdirty,\n\tget_slot_changes_fn,\n\tget_slot_context_fn\n) {\n\tconst slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n\tupdate_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn);\n}\n\n/** @returns {any[] | -1} */\nexport function get_all_dirty_from_scope($$scope) {\n\tif ($$scope.ctx.length > 32) {\n\t\tconst dirty = [];\n\t\tconst length = $$scope.ctx.length / 32;\n\t\tfor (let i = 0; i < length; i++) {\n\t\t\tdirty[i] = -1;\n\t\t}\n\t\treturn dirty;\n\t}\n\treturn -1;\n}\n\n/** @returns {{}} */\nexport function exclude_internal_props(props) {\n\tconst result = {};\n\tfor (const k in props) if (k[0] !== '$') result[k] = props[k];\n\treturn result;\n}\n\n/** @returns {{}} */\nexport function compute_rest_props(props, keys) {\n\tconst rest = {};\n\tkeys = new Set(keys);\n\tfor (const k in props) if (!keys.has(k) && k[0] !== '$') rest[k] = props[k];\n\treturn rest;\n}\n\n/** @returns {{}} */\nexport function compute_slots(slots) {\n\tconst result = {};\n\tfor (const key in slots) {\n\t\tresult[key] = true;\n\t}\n\treturn result;\n}\n\n/** @returns {(this: any, ...args: any[]) => void} */\nexport function once(fn) {\n\tlet ran = false;\n\treturn function (...args) {\n\t\tif (ran) return;\n\t\tran = true;\n\t\tfn.call(this, ...args);\n\t};\n}\n\nexport function null_to_empty(value) {\n\treturn value == null ? '' : value;\n}\n\nexport function set_store_value(store, ret, value) {\n\tstore.set(value);\n\treturn ret;\n}\n\nexport const has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\n\nexport function action_destroyer(action_result) {\n\treturn action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\n\n/** @param {number | string} value\n * @returns {[number, string]}\n */\nexport function split_css_unit(value) {\n\tconst split = typeof value === 'string' && value.match(/^\\s*(-?[\\d.]+)([^\\s]*)\\s*$/);\n\treturn split ? [parseFloat(split[1]), split[2] || 'px'] : [/** @type {number} */ (value), 'px'];\n}\n\nexport const contenteditable_truthy_values = ['', true, 1, 'true', 'contenteditable'];\n","import { noop } from './utils.js';\n\nexport const is_client = typeof window !== 'undefined';\n\n/** @type {() => number} */\nexport let now = is_client ? () => window.performance.now() : () => Date.now();\n\nexport let raf = is_client ? (cb) => requestAnimationFrame(cb) : noop;\n\n// used internally for testing\n/** @returns {void} */\nexport function set_now(fn) {\n\tnow = fn;\n}\n\n/** @returns {void} */\nexport function set_raf(fn) {\n\traf = fn;\n}\n","import { raf } from './environment.js';\n\nconst tasks = new Set();\n\n/**\n * @param {number} now\n * @returns {void}\n */\nfunction run_tasks(now) {\n\ttasks.forEach((task) => {\n\t\tif (!task.c(now)) {\n\t\t\ttasks.delete(task);\n\t\t\ttask.f();\n\t\t}\n\t});\n\tif (tasks.size !== 0) raf(run_tasks);\n}\n\n/**\n * For testing purposes only!\n * @returns {void}\n */\nexport function clear_loops() {\n\ttasks.clear();\n}\n\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n * @param {import('./private.js').TaskCallback} callback\n * @returns {import('./private.js').Task}\n */\nexport function loop(callback) {\n\t/** @type {import('./private.js').TaskEntry} */\n\tlet task;\n\tif (tasks.size === 0) raf(run_tasks);\n\treturn {\n\t\tpromise: new Promise((fulfill) => {\n\t\t\ttasks.add((task = { c: callback, f: fulfill }));\n\t\t}),\n\t\tabort() {\n\t\t\ttasks.delete(task);\n\t\t}\n\t};\n}\n","import { contenteditable_truthy_values, has_prop } from './utils.js';\n\nimport { ResizeObserverSingleton } from './ResizeObserverSingleton.js';\n\n// Track which nodes are claimed during hydration. Unclaimed nodes can then be removed from the DOM\n// at the end of hydration without touching the remaining nodes.\nlet is_hydrating = false;\n\n/**\n * @returns {void}\n */\nexport function start_hydrating() {\n\tis_hydrating = true;\n}\n\n/**\n * @returns {void}\n */\nexport function end_hydrating() {\n\tis_hydrating = false;\n}\n\n/**\n * @param {number} low\n * @param {number} high\n * @param {(index: number) => number} key\n * @param {number} value\n * @returns {number}\n */\nfunction upper_bound(low, high, key, value) {\n\t// Return first index of value larger than input value in the range [low, high)\n\twhile (low < high) {\n\t\tconst mid = low + ((high - low) >> 1);\n\t\tif (key(mid) <= value) {\n\t\t\tlow = mid + 1;\n\t\t} else {\n\t\t\thigh = mid;\n\t\t}\n\t}\n\treturn low;\n}\n\n/**\n * @param {NodeEx} target\n * @returns {void}\n */\nfunction init_hydrate(target) {\n\tif (target.hydrate_init) return;\n\ttarget.hydrate_init = true;\n\t// We know that all children have claim_order values since the unclaimed have been detached if target is not <head>\n\n\tlet children = /** @type {ArrayLike<NodeEx2>} */ (target.childNodes);\n\t// If target is <head>, there may be children without claim_order\n\tif (target.nodeName === 'HEAD') {\n\t\tconst my_children = [];\n\t\tfor (let i = 0; i < children.length; i++) {\n\t\t\tconst node = children[i];\n\t\t\tif (node.claim_order !== undefined) {\n\t\t\t\tmy_children.push(node);\n\t\t\t}\n\t\t}\n\t\tchildren = my_children;\n\t}\n\t/*\n\t * Reorder claimed children optimally.\n\t * We can reorder claimed children optimally by finding the longest subsequence of\n\t * nodes that are already claimed in order and only moving the rest. The longest\n\t * subsequence of nodes that are claimed in order can be found by\n\t * computing the longest increasing subsequence of .claim_order values.\n\t *\n\t * This algorithm is optimal in generating the least amount of reorder operations\n\t * possible.\n\t *\n\t * Proof:\n\t * We know that, given a set of reordering operations, the nodes that do not move\n\t * always form an increasing subsequence, since they do not move among each other\n\t * meaning that they must be already ordered among each other. Thus, the maximal\n\t * set of nodes that do not move form a longest increasing subsequence.\n\t */\n\t// Compute longest increasing subsequence\n\t// m: subsequence length j => index k of smallest value that ends an increasing subsequence of length j\n\tconst m = new Int32Array(children.length + 1);\n\t// Predecessor indices + 1\n\tconst p = new Int32Array(children.length);\n\tm[0] = -1;\n\tlet longest = 0;\n\tfor (let i = 0; i < children.length; i++) {\n\t\tconst current = children[i].claim_order;\n\t\t// Find the largest subsequence length such that it ends in a value less than our current value\n\t\t// upper_bound returns first greater value, so we subtract one\n\t\t// with fast path for when we are on the current longest subsequence\n\t\tconst seq_len =\n\t\t\t(longest > 0 && children[m[longest]].claim_order <= current\n\t\t\t\t? longest + 1\n\t\t\t\t: upper_bound(1, longest, (idx) => children[m[idx]].claim_order, current)) - 1;\n\t\tp[i] = m[seq_len] + 1;\n\t\tconst new_len = seq_len + 1;\n\t\t// We can guarantee that current is the smallest value. Otherwise, we would have generated a longer sequence.\n\t\tm[new_len] = i;\n\t\tlongest = Math.max(new_len, longest);\n\t}\n\t// The longest increasing subsequence of nodes (initially reversed)\n\n\t/**\n\t * @type {NodeEx2[]}\n\t */\n\tconst lis = [];\n\t// The rest of the nodes, nodes that will be moved\n\n\t/**\n\t * @type {NodeEx2[]}\n\t */\n\tconst to_move = [];\n\tlet last = children.length - 1;\n\tfor (let cur = m[longest] + 1; cur != 0; cur = p[cur - 1]) {\n\t\tlis.push(children[cur - 1]);\n\t\tfor (; last >= cur; last--) {\n\t\t\tto_move.push(children[last]);\n\t\t}\n\t\tlast--;\n\t}\n\tfor (; last >= 0; last--) {\n\t\tto_move.push(children[last]);\n\t}\n\tlis.reverse();\n\t// We sort the nodes being moved to guarantee that their insertion order matches the claim order\n\tto_move.sort((a, b) => a.claim_order - b.claim_order);\n\t// Finally, we move the nodes\n\tfor (let i = 0, j = 0; i < to_move.length; i++) {\n\t\twhile (j < lis.length && to_move[i].claim_order >= lis[j].claim_order) {\n\t\t\tj++;\n\t\t}\n\t\tconst anchor = j < lis.length ? lis[j] : null;\n\t\ttarget.insertBefore(to_move[i], anchor);\n\t}\n}\n\n/**\n * @param {Node} target\n * @param {Node} node\n * @returns {void}\n */\nexport function append(target, node) {\n\ttarget.appendChild(node);\n}\n\n/**\n * @param {Node} target\n * @param {string} style_sheet_id\n * @param {string} styles\n * @returns {void}\n */\nexport function append_styles(target, style_sheet_id, styles) {\n\tconst append_styles_to = get_root_for_style(target);\n\tif (!append_styles_to.getElementById(style_sheet_id)) {\n\t\tconst style = element('style');\n\t\tstyle.id = style_sheet_id;\n\t\tstyle.textContent = styles;\n\t\tappend_stylesheet(append_styles_to, style);\n\t}\n}\n\n/**\n * @param {Node} node\n * @returns {ShadowRoot | Document}\n */\nexport function get_root_for_style(node) {\n\tif (!node) return document;\n\tconst root = node.getRootNode ? node.getRootNode() : node.ownerDocument;\n\tif (root && /** @type {ShadowRoot} */ (root).host) {\n\t\treturn /** @type {ShadowRoot} */ (root);\n\t}\n\treturn node.ownerDocument;\n}\n\n/**\n * @param {Node} node\n * @returns {CSSStyleSheet}\n */\nexport function append_empty_stylesheet(node) {\n\tconst style_element = element('style');\n\t// For transitions to work without 'style-src: unsafe-inline' Content Security Policy,\n\t// these empty tags need to be allowed with a hash as a workaround until we move to the Web Animations API.\n\t// Using the hash for the empty string (for an empty tag) works in all browsers except Safari.\n\t// So as a workaround for the workaround, when we append empty style tags we set their content to /* empty */.\n\t// The hash 'sha256-9OlNO0DNEeaVzHL4RZwCLsBHA8WBQ8toBp/4F5XV2nc=' will then work even in Safari.\n\tstyle_element.textContent = '/* empty */';\n\tappend_stylesheet(get_root_for_style(node), style_element);\n\treturn style_element.sheet;\n}\n\n/**\n * @param {ShadowRoot | Document} node\n * @param {HTMLStyleElement} style\n * @returns {CSSStyleSheet}\n */\nfunction append_stylesheet(node, style) {\n\tappend(/** @type {Document} */ (node).head || node, style);\n\treturn style.sheet;\n}\n\n/**\n * @param {NodeEx} target\n * @param {NodeEx} node\n * @returns {void}\n */\nexport function append_hydration(target, node) {\n\tif (is_hydrating) {\n\t\tinit_hydrate(target);\n\t\tif (\n\t\t\ttarget.actual_end_child === undefined ||\n\t\t\t(target.actual_end_child !== null && target.actual_end_child.parentNode !== target)\n\t\t) {\n\t\t\ttarget.actual_end_child = target.firstChild;\n\t\t}\n\t\t// Skip nodes of undefined ordering\n\t\twhile (target.actual_end_child !== null && target.actual_end_child.claim_order === undefined) {\n\t\t\ttarget.actual_end_child = target.actual_end_child.nextSibling;\n\t\t}\n\t\tif (node !== target.actual_end_child) {\n\t\t\t// We only insert if the ordering of this node should be modified or the parent node is not target\n\t\t\tif (node.claim_order !== undefined || node.parentNode !== target) {\n\t\t\t\ttarget.insertBefore(node, target.actual_end_child);\n\t\t\t}\n\t\t} else {\n\t\t\ttarget.actual_end_child = node.nextSibling;\n\t\t}\n\t} else if (node.parentNode !== target || node.nextSibling !== null) {\n\t\ttarget.appendChild(node);\n\t}\n}\n\n/**\n * @param {Node} target\n * @param {Node} node\n * @param {Node} [anchor]\n * @returns {void}\n */\nexport function insert(target, node, anchor) {\n\ttarget.insertBefore(node, anchor || null);\n}\n\n/**\n * @param {NodeEx} target\n * @param {NodeEx} node\n * @param {NodeEx} [anchor]\n * @returns {void}\n */\nexport function insert_hydration(target, node, anchor) {\n\tif (is_hydrating && !anchor) {\n\t\tappend_hydration(target, node);\n\t} else if (node.parentNode !== target || node.nextSibling != anchor) {\n\t\ttarget.insertBefore(node, anchor || null);\n\t}\n}\n\n/**\n * @param {Node} node\n * @returns {void}\n */\nexport function detach(node) {\n\tif (node.parentNode) {\n\t\tnode.parentNode.removeChild(node);\n\t}\n}\n\n/**\n * @returns {void} */\nexport function destroy_each(iterations, detaching) {\n\tfor (let i = 0; i < iterations.length; i += 1) {\n\t\tif (iterations[i]) iterations[i].d(detaching);\n\t}\n}\n\n/**\n * @template {keyof HTMLElementTagNameMap} K\n * @param {K} name\n * @returns {HTMLElementTagNameMap[K]}\n */\nexport function element(name) {\n\treturn document.createElement(name);\n}\n\n/**\n * @template {keyof HTMLElementTagNameMap} K\n * @param {K} name\n * @param {string} is\n * @returns {HTMLElementTagNameMap[K]}\n */\nexport function element_is(name, is) {\n\treturn document.createElement(name, { is });\n}\n\n/**\n * @template T\n * @template {keyof T} K\n * @param {T} obj\n * @param {K[]} exclude\n * @returns {Pick<T, Exclude<keyof T, K>>}\n */\nexport function object_without_properties(obj, exclude) {\n\tconst target = /** @type {Pick<T, Exclude<keyof T, K>>} */ ({});\n\tfor (const k in obj) {\n\t\tif (\n\t\t\thas_prop(obj, k) &&\n\t\t\t// @ts-ignore\n\t\t\texclude.indexOf(k) === -1\n\t\t) {\n\t\t\t// @ts-ignore\n\t\t\ttarget[k] = obj[k];\n\t\t}\n\t}\n\treturn target;\n}\n\n/**\n * @template {keyof SVGElementTagNameMap} K\n * @param {K} name\n * @returns {SVGElement}\n */\nexport function svg_element(name) {\n\treturn document.createElementNS('http://www.w3.org/2000/svg', name);\n}\n\n/**\n * @param {string} data\n * @returns {Text}\n */\nexport function text(data) {\n\treturn document.createTextNode(data);\n}\n\n/**\n * @returns {Text} */\nexport function space() {\n\treturn text(' ');\n}\n\n/**\n * @returns {Text} */\nexport function empty() {\n\treturn text('');\n}\n\n/**\n * @param {string} content\n * @returns {Comment}\n */\nexport function comment(content) {\n\treturn document.createComment(content);\n}\n\n/**\n * @param {EventTarget} node\n * @param {string} event\n * @param {EventListenerOrEventListenerObject} handler\n * @param {boolean | AddEventListenerOptions | EventListenerOptions} [options]\n * @returns {() => void}\n */\nexport function listen(node, event, handler, options) {\n\tnode.addEventListener(event, handler, options);\n\treturn () => node.removeEventListener(event, handler, options);\n}\n\n/**\n * @returns {(event: any) => any} */\nexport function prevent_default(fn) {\n\treturn function (event) {\n\t\tevent.preventDefault();\n\t\t// @ts-ignore\n\t\treturn fn.call(this, event);\n\t};\n}\n\n/**\n * @returns {(event: any) => any} */\nexport function stop_propagation(fn) {\n\treturn function (event) {\n\t\tevent.stopPropagation();\n\t\t// @ts-ignore\n\t\treturn fn.call(this, event);\n\t};\n}\n\n/**\n * @returns {(event: any) => any} */\nexport function stop_immediate_propagation(fn) {\n\treturn function (event) {\n\t\tevent.stopImmediatePropagation();\n\t\t// @ts-ignore\n\t\treturn fn.call(this, event);\n\t};\n}\n\n/**\n * @returns {(event: any) => void} */\nexport function self(fn) {\n\treturn function (event) {\n\t\t// @ts-ignore\n\t\tif (event.target === this) fn.call(this, event);\n\t};\n}\n\n/**\n * @returns {(event: any) => void} */\nexport function trusted(fn) {\n\treturn function (event) {\n\t\t// @ts-ignore\n\t\tif (event.isTrusted) fn.call(this, event);\n\t};\n}\n\n/**\n * @param {Element} node\n * @param {string} attribute\n * @param {string} [value]\n * @returns {void}\n */\nexport function attr(node, attribute, value) {\n\tif (value == null) node.removeAttribute(attribute);\n\telse if (node.getAttribute(attribute) !== value) node.setAttribute(attribute, value);\n}\n/**\n * List of attributes that should always be set through the attr method,\n * because updating them through the property setter doesn't work reliably.\n * In the example of `width`/`height`, the problem is that the setter only\n * accepts numeric values, but the attribute can also be set to a string like `50%`.\n * If this list becomes too big, rethink this approach.\n */\nconst always_set_through_set_attribute = ['width', 'height'];\n\n/**\n * @param {Element & ElementCSSInlineStyle} node\n * @param {{ [x: string]: string }} attributes\n * @returns {void}\n */\nexport function set_attributes(node, attributes) {\n\t// @ts-ignore\n\tconst descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n\tfor (const key in attributes) {\n\t\tif (attributes[key] == null) {\n\t\t\tnode.removeAttribute(key);\n\t\t} else if (key === 'style') {\n\t\t\tnode.style.cssText = attributes[key];\n\t\t} else if (key === '__value') {\n\t\t\t/** @type {any} */ (node).value = node[key] = attributes[key];\n\t\t} else if (\n\t\t\tdescriptors[key] &&\n\t\t\tdescriptors[key].set &&\n\t\t\talways_set_through_set_attribute.indexOf(key) === -1\n\t\t) {\n\t\t\tnode[key] = attributes[key];\n\t\t} else {\n\t\t\tattr(node, key, attributes[key]);\n\t\t}\n\t}\n}\n\n/**\n * @param {Element & ElementCSSInlineStyle} node\n * @param {{ [x: string]: string }} attributes\n * @returns {void}\n */\nexport function set_svg_attributes(node, attributes) {\n\tfor (const key in attributes) {\n\t\tattr(node, key, attributes[key]);\n\t}\n}\n\n/**\n * @param {Record<string, unknown>} data_map\n * @returns {void}\n */\nexport function set_custom_element_data_map(node, data_map) {\n\tObject.keys(data_map).forEach((key) => {\n\t\tset_custom_element_data(node, key, data_map[key]);\n\t});\n}\n\n/**\n * @returns {void} */\nexport function set_custom_element_data(node, prop, value) {\n\tconst lower = prop.toLowerCase(); // for backwards compatibility with existing behavior we do lowercase first\n\tif (lower in node) {\n\t\tnode[lower] = typeof node[lower] === 'boolean' && value === '' ? true : value;\n\t} else if (prop in node) {\n\t\tnode[prop] = typeof node[prop] === 'boolean' && value === '' ? true : value;\n\t} else {\n\t\tattr(node, prop, value);\n\t}\n}\n\n/**\n * @param {string} tag\n */\nexport function set_dynamic_element_data(tag) {\n\treturn /-/.test(tag) ? set_custom_element_data_map : set_attributes;\n}\n\n/**\n * @returns {void}\n */\nexport function xlink_attr(node, attribute, value) {\n\tnode.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\n\n/**\n * @param {HTMLElement} node\n * @returns {string}\n */\nexport function get_svelte_dataset(node) {\n\treturn node.dataset.svelteH;\n}\n\n/**\n * @returns {unknown[]} */\nexport function get_binding_group_value(group, __value, checked) {\n\tconst value = new Set();\n\tfor (let i = 0; i < group.length; i += 1) {\n\t\tif (group[i].checked) value.add(group[i].__value);\n\t}\n\tif (!checked) {\n\t\tvalue.delete(__value);\n\t}\n\treturn Array.from(value);\n}\n\n/**\n * @param {HTMLInputElement[]} group\n * @returns {{ p(...inputs: HTMLInputElement[]): void; r(): void; }}\n */\nexport function init_binding_group(group) {\n\t/**\n\t * @type {HTMLInputElement[]} */\n\tlet _inputs;\n\treturn {\n\t\t/* push */ p(...inputs) {\n\t\t\t_inputs = inputs;\n\t\t\t_inputs.forEach((input) => group.push(input));\n\t\t},\n\t\t/* remove */ r() {\n\t\t\t_inputs.forEach((input) => group.splice(group.indexOf(input), 1));\n\t\t}\n\t};\n}\n\n/**\n * @param {number[]} indexes\n * @returns {{ u(new_indexes: number[]): void; p(...inputs: HTMLInputElement[]): void; r: () => void; }}\n */\nexport function init_binding_group_dynamic(group, indexes) {\n\t/**\n\t * @type {HTMLInputElement[]} */\n\tlet _group = get_binding_group(group);\n\n\t/**\n\t * @type {HTMLInputElement[]} */\n\tlet _inputs;\n\n\tfunction get_binding_group(group) {\n\t\tfor (let i = 0; i < indexes.length; i++) {\n\t\t\tgroup = group[indexes[i]] = group[indexes[i]] || [];\n\t\t}\n\t\treturn group;\n\t}\n\n\t/**\n\t * @returns {void} */\n\tfunction push() {\n\t\t_inputs.forEach((input) => _group.push(input));\n\t}\n\n\t/**\n\t * @returns {void} */\n\tfunction remove() {\n\t\t_inputs.forEach((input) => _group.splice(_group.indexOf(input), 1));\n\t}\n\treturn {\n\t\t/* update */ u(new_indexes) {\n\t\t\tindexes = new_indexes;\n\t\t\tconst new_group = get_binding_group(group);\n\t\t\tif (new_group !== _group) {\n\t\t\t\tremove();\n\t\t\t\t_group = new_group;\n\t\t\t\tpush();\n\t\t\t}\n\t\t},\n\t\t/* push */ p(...inputs) {\n\t\t\t_inputs = inputs;\n\t\t\tpush();\n\t\t},\n\t\t/* remove */ r: remove\n\t};\n}\n\n/** @returns {number} */\nexport function to_number(value) {\n\treturn value === '' ? null : +value;\n}\n\n/** @returns {any[]} */\nexport function time_ranges_to_array(ranges) {\n\tconst array = [];\n\tfor (let i = 0; i < ranges.length; i += 1) {\n\t\tarray.push({ start: ranges.start(i), end: ranges.end(i) });\n\t}\n\treturn array;\n}\n\n/**\n * @param {Element} element\n * @returns {ChildNode[]}\n */\nexport function children(element) {\n\treturn Array.from(element.childNodes);\n}\n\n/**\n * @param {ChildNodeArray} nodes\n * @returns {void}\n */\nfunction init_claim_info(nodes) {\n\tif (nodes.claim_info === undefined) {\n\t\tnodes.claim_info = { last_index: 0, total_claimed: 0 };\n\t}\n}\n\n/**\n * @template {ChildNodeEx} R\n * @param {ChildNodeArray} nodes\n * @param {(node: ChildNodeEx) => node is R} predicate\n * @param {(node: ChildNodeEx) => ChildNodeEx | undefined} process_node\n * @param {() => R} create_node\n * @param {boolean} dont_update_last_index\n * @returns {R}\n */\nfunction claim_node(nodes, predicate, process_node, create_node, dont_update_last_index = false) {\n\t// Try to find nodes in an order such that we lengthen the longest increasing subsequence\n\tinit_claim_info(nodes);\n\tconst result_node = (() => {\n\t\t// We first try to find an element after the previous one\n\t\tfor (let i = nodes.claim_info.last_index; i < nodes.length; i++) {\n\t\t\tconst node = nodes[i];\n\t\t\tif (predicate(node)) {\n\t\t\t\tconst replacement = process_node(node);\n\t\t\t\tif (replacement === undefined) {\n\t\t\t\t\tnodes.splice(i, 1);\n\t\t\t\t} else {\n\t\t\t\t\tnodes[i] = replacement;\n\t\t\t\t}\n\t\t\t\tif (!dont_update_last_index) {\n\t\t\t\t\tnodes.claim_info.last_index = i;\n\t\t\t\t}\n\t\t\t\treturn node;\n\t\t\t}\n\t\t}\n\t\t// Otherwise, we try to find one before\n\t\t// We iterate in reverse so that we don't go too far back\n\t\tfor (let i = nodes.claim_info.last_index - 1; i >= 0; i--) {\n\t\t\tconst node = nodes[i];\n\t\t\tif (predicate(node)) {\n\t\t\t\tconst replacement = process_node(node);\n\t\t\t\tif (replacement === undefined) {\n\t\t\t\t\tnodes.splice(i, 1);\n\t\t\t\t} else {\n\t\t\t\t\tnodes[i] = replacement;\n\t\t\t\t}\n\t\t\t\tif (!dont_update_last_index) {\n\t\t\t\t\tnodes.claim_info.last_index = i;\n\t\t\t\t} else if (replacement === undefined) {\n\t\t\t\t\t// Since we spliced before the last_index, we decrease it\n\t\t\t\t\tnodes.claim_info.last_index--;\n\t\t\t\t}\n\t\t\t\treturn node;\n\t\t\t}\n\t\t}\n\t\t// If we can't find any matching node, we create a new one\n\t\treturn create_node();\n\t})();\n\tresult_node.claim_order = nodes.claim_info.total_claimed;\n\tnodes.claim_info.total_claimed += 1;\n\treturn result_node;\n}\n\n/**\n * @param {ChildNodeArray} nodes\n * @param {string} name\n * @param {{ [key: string]: boolean }} attributes\n * @param {(name: string) => Element | SVGElement} create_element\n * @returns {Element | SVGElement}\n */\nfunction claim_element_base(nodes, name, attributes, create_element) {\n\treturn claim_node(\n\t\tnodes,\n\t\t/** @returns {node is Element | SVGElement} */\n\t\t(node) => node.nodeName === name,\n\t\t/** @param {Element} node */\n\t\t(node) => {\n\t\t\tconst remove = [];\n\t\t\tfor (let j = 0; j < node.attributes.length; j++) {\n\t\t\t\tconst attribute = node.attributes[j];\n\t\t\t\tif (!attributes[attribute.name]) {\n\t\t\t\t\tremove.push(attribute.name);\n\t\t\t\t}\n\t\t\t}\n\t\t\tremove.forEach((v) => node.removeAttribute(v));\n\t\t\treturn undefined;\n\t\t},\n\t\t() => create_element(name)\n\t);\n}\n\n/**\n * @param {ChildNodeArray} nodes\n * @param {string} name\n * @param {{ [key: string]: boolean }} attributes\n * @returns {Element | SVGElement}\n */\nexport function claim_element(nodes, name, attributes) {\n\treturn claim_element_base(nodes, name, attributes, element);\n}\n\n/**\n * @param {ChildNodeArray} nodes\n * @param {string} name\n * @param {{ [key: string]: boolean }} attributes\n * @returns {Element | SVGElement}\n */\nexport function claim_svg_element(nodes, name, attributes) {\n\treturn claim_element_base(nodes, name, attributes, svg_element);\n}\n\n/**\n * @param {ChildNodeArray} nodes\n * @returns {Text}\n */\nexport function claim_text(nodes, data) {\n\treturn claim_node(\n\t\tnodes,\n\t\t/** @returns {node is Text} */\n\t\t(node) => node.nodeType === 3,\n\t\t/** @param {Text} node */\n\t\t(node) => {\n\t\t\tconst data_str = '' + data;\n\t\t\tif (node.data.startsWith(data_str)) {\n\t\t\t\tif (node.data.length !== data_str.length) {\n\t\t\t\t\treturn node.splitText(data_str.length);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tnode.data = data_str;\n\t\t\t}\n\t\t},\n\t\t() => text(data),\n\t\ttrue // Text nodes should not update last index since it is likely not worth it to eliminate an increasing subsequence of actual elements\n\t);\n}\n\n/**\n * @returns {Text} */\nexport function claim_space(nodes) {\n\treturn claim_text(nodes, ' ');\n}\n\n/**\n * @param {ChildNodeArray} nodes\n * @returns {Comment}\n */\nexport function claim_comment(nodes, data) {\n\treturn claim_node(\n\t\tnodes,\n\t\t/** @returns {node is Comment} */\n\t\t(node) => node.nodeType === 8,\n\t\t/** @param {Comment} node */\n\t\t(node) => {\n\t\t\tnode.data = '' + data;\n\t\t\treturn undefined;\n\t\t},\n\t\t() => comment(data),\n\t\ttrue\n\t);\n}\n\nfunction get_comment_idx(nodes, text, start) {\n\tfor (let i = start; i < nodes.length; i += 1) {\n\t\tconst node = nodes[i];\n\t\tif (node.nodeType === 8 /* comment node */ && node.textContent.trim() === text) {\n\t\t\treturn i;\n\t\t}\n\t}\n\treturn -1;\n}\n\n/**\n * @param {boolean} is_svg\n * @returns {HtmlTagHydration}\n */\nexport function claim_html_tag(nodes, is_svg) {\n\t// find html opening tag\n\tconst start_index = get_comment_idx(nodes, 'HTML_TAG_START', 0);\n\tconst end_index = get_comment_idx(nodes, 'HTML_TAG_END', start_index + 1);\n\tif (start_index === -1 || end_index === -1) {\n\t\treturn new HtmlTagHydration(is_svg);\n\t}\n\n\tinit_claim_info(nodes);\n\tconst html_tag_nodes = nodes.splice(start_index, end_index - start_index + 1);\n\tdetach(html_tag_nodes[0]);\n\tdetach(html_tag_nodes[html_tag_nodes.length - 1]);\n\tconst claimed_nodes = html_tag_nodes.slice(1, html_tag_nodes.length - 1);\n\tif (claimed_nodes.length === 0) {\n\t\treturn new HtmlTagHydration(is_svg);\n\t}\n\tfor (const n of claimed_nodes) {\n\t\tn.claim_order = nodes.claim_info.total_claimed;\n\t\tnodes.claim_info.total_claimed += 1;\n\t}\n\treturn new HtmlTagHydration(is_svg, claimed_nodes);\n}\n\n/**\n * @param {Text} text\n * @param {unknown} data\n * @returns {void}\n */\nexport function set_data(text, data) {\n\tdata = '' + data;\n\tif (text.data === data) return;\n\ttext.data = /** @type {string} */ (data);\n}\n\n/**\n * @param {Text} text\n * @param {unknown} data\n * @returns {void}\n */\nexport function set_data_contenteditable(text, data) {\n\tdata = '' + data;\n\tif (text.wholeText === data) return;\n\ttext.data = /** @type {string} */ (data);\n}\n\n/**\n * @param {Text} text\n * @param {unknown} data\n * @param {string} attr_value\n * @returns {void}\n */\nexport function set_data_maybe_contenteditable(text, data, attr_value) {\n\tif (~contenteditable_truthy_values.indexOf(attr_value)) {\n\t\tset_data_contenteditable(text, data);\n\t} else {\n\t\tset_data(text, data);\n\t}\n}\n\n/**\n * @returns {void} */\nexport function set_input_value(input, value) {\n\tinput.value = value == null ? '' : value;\n}\n\n/**\n * @returns {void} */\nexport function set_input_type(input, type) {\n\ttry {\n\t\tinput.type = type;\n\t} catch (e) {\n\t\t// do nothing\n\t}\n}\n\n/**\n * @returns {void} */\nexport function set_style(node, key, value, important) {\n\tif (value == null) {\n\t\tnode.style.removeProperty(key);\n\t} else {\n\t\tnode.style.setProperty(key, value, important ? 'important' : '');\n\t}\n}\n\n/**\n * @returns {void} */\nexport function select_option(select, value, mounting) {\n\tfor (let i = 0; i < select.options.length; i += 1) {\n\t\tconst option = select.options[i];\n\t\tif (option.__value === value) {\n\t\t\toption.selected = true;\n\t\t\treturn;\n\t\t}\n\t}\n\tif (!mounting || value !== undefined) {\n\t\tselect.selectedIndex = -1; // no option should be selected\n\t}\n}\n\n/**\n * @returns {void} */\nexport function select_options(select, value) {\n\tfor (let i = 0; i < select.options.length; i += 1) {\n\t\tconst option = select.options[i];\n\t\toption.selected = ~value.indexOf(option.__value);\n\t}\n}\n\nexport function select_value(select) {\n\tconst selected_option = select.querySelector(':checked');\n\treturn selected_option && selected_option.__value;\n}\n\nexport function select_multiple_value(select) {\n\treturn [].map.call(select.querySelectorAll(':checked'), (option) => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\n\n/**\n * @type {boolean} */\nlet crossorigin;\n\n/**\n * @returns {boolean} */\nexport function is_crossorigin() {\n\tif (crossorigin === undefined) {\n\t\tcrossorigin = false;\n\t\ttry {\n\t\t\tif (typeof window !== 'undefined' && window.parent) {\n\t\t\t\tvoid window.parent.document;\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tcrossorigin = true;\n\t\t}\n\t}\n\treturn crossorigin;\n}\n\n/**\n * @param {HTMLElement} node\n * @param {() => void} fn\n * @returns {() => void}\n */\nexport function add_iframe_resize_listener(node, fn) {\n\tconst computed_style = getComputedStyle(node);\n\tif (computed_style.position === 'static') {\n\t\tnode.style.position = 'relative';\n\t}\n\tconst iframe = element('iframe');\n\tiframe.setAttribute(\n\t\t'style',\n\t\t'display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ' +\n\t\t\t'overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: -1;'\n\t);\n\tiframe.setAttribute('aria-hidden', 'true');\n\tiframe.tabIndex = -1;\n\tconst crossorigin = is_crossorigin();\n\n\t/**\n\t * @type {() => void}\n\t */\n\tlet unsubscribe;\n\tif (crossorigin) {\n\t\tiframe.src = \"data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>\";\n\t\tunsubscribe = listen(\n\t\t\twindow,\n\t\t\t'message',\n\t\t\t/** @param {MessageEvent} event */ (event) => {\n\t\t\t\tif (event.source === iframe.contentWindow) fn();\n\t\t\t}\n\t\t);\n\t} else {\n\t\tiframe.src = 'about:blank';\n\t\tiframe.onload = () => {\n\t\t\tunsubscribe = listen(iframe.contentWindow, 'resize', fn);\n\t\t\t// make sure an initial resize event is fired _after_ the iframe is loaded (which is asynchronous)\n\t\t\t// see https://github.com/sveltejs/svelte/issues/4233\n\t\t\tfn();\n\t\t};\n\t}\n\tappend(node, iframe);\n\treturn () => {\n\t\tif (crossorigin) {\n\t\t\tunsubscribe();\n\t\t} else if (unsubscribe && iframe.contentWindow) {\n\t\t\tunsubscribe();\n\t\t}\n\t\tdetach(iframe);\n\t};\n}\nexport const resize_observer_content_box = /* @__PURE__ */ new ResizeObserverSingleton({\n\tbox: 'content-box'\n});\nexport const resize_observer_border_box = /* @__PURE__ */ new ResizeObserverSingleton({\n\tbox: 'border-box'\n});\nexport const resize_observer_device_pixel_content_box = /* @__PURE__ */ new ResizeObserverSingleton(\n\t{ box: 'device-pixel-content-box' }\n);\nexport { ResizeObserverSingleton };\n\n/**\n * @returns {void} */\nexport function toggle_class(element, name, toggle) {\n\t// The `!!` is required because an `undefined` flag means flipping the current state.\n\telement.classList.toggle(name, !!toggle);\n}\n\n/**\n * @template T\n * @param {string} type\n * @param {T} [detail]\n * @param {{ bubbles?: boolean, cancelable?: boolean }} [options]\n * @returns {CustomEvent<T>}\n */\nexport function custom_event(type, detail, { bubbles = false, cancelable = false } = {}) {\n\treturn new CustomEvent(type, { detail, bubbles, cancelable });\n}\n\n/**\n * @param {string} selector\n * @param {HTMLElement} parent\n * @returns {ChildNodeArray}\n */\nexport function query_selector_all(selector, parent = document.body) {\n\treturn Array.from(parent.querySelectorAll(selector));\n}\n\n/**\n * @param {string} nodeId\n * @param {HTMLElement} head\n * @returns {any[]}\n */\nexport function head_selector(nodeId, head) {\n\tconst result = [];\n\tlet started = 0;\n\tfor (const node of head.childNodes) {\n\t\tif (node.nodeType === 8 /* comment node */) {\n\t\t\tconst comment = node.textContent.trim();\n\t\t\tif (comment === `HEAD_${nodeId}_END`) {\n\t\t\t\tstarted -= 1;\n\t\t\t\tresult.push(node);\n\t\t\t} else if (comment === `HEAD_${nodeId}_START`) {\n\t\t\t\tstarted += 1;\n\t\t\t\tresult.push(node);\n\t\t\t}\n\t\t} else if (started > 0) {\n\t\t\tresult.push(node);\n\t\t}\n\t}\n\treturn result;\n}\n/** */\nexport class HtmlTag {\n\t/**\n\t * @private\n\t * @default false\n\t */\n\tis_svg = false;\n\t/** parent for creating node */\n\te = undefined;\n\t/** html tag nodes */\n\tn = undefined;\n\t/** target */\n\tt = undefined;\n\t/** anchor */\n\ta = undefined;\n\tconstructor(is_svg = false) {\n\t\tthis.is_svg = is_svg;\n\t\tthis.e = this.n = null;\n\t}\n\n\t/**\n\t * @param {string} html\n\t * @returns {void}\n\t */\n\tc(html) {\n\t\tthis.h(html);\n\t}\n\n\t/**\n\t * @param {string} html\n\t * @param {HTMLElement | SVGElement} target\n\t * @param {HTMLElement | SVGElement} anchor\n\t * @returns {void}\n\t */\n\tm(html, target, anchor = null) {\n\t\tif (!this.e) {\n\t\t\tif (this.is_svg)\n\t\t\t\tthis.e = svg_element(/** @type {keyof SVGElementTagNameMap} */ (target.nodeName));\n\t\t\t/** #7364  target for <template> may be provided as #document-fragment(11) */ else\n\t\t\t\tthis.e = element(\n\t\t\t\t\t/** @type {keyof HTMLElementTagNameMap} */ (\n\t\t\t\t\t\ttarget.nodeType === 11 ? 'TEMPLATE' : target.nodeName\n\t\t\t\t\t)\n\t\t\t\t);\n\t\t\tthis.t =\n\t\t\t\ttarget.tagName !== 'TEMPLATE'\n\t\t\t\t\t? target\n\t\t\t\t\t: /** @type {HTMLTemplateElement} */ (target).content;\n\t\t\tthis.c(html);\n\t\t}\n\t\tthis.i(anchor);\n\t}\n\n\t/**\n\t * @param {string} html\n\t * @returns {void}\n\t */\n\th(html) {\n\t\tthis.e.innerHTML = html;\n\t\tthis.n = Array.from(\n\t\t\tthis.e.nodeName === 'TEMPLATE' ? this.e.content.childNodes : this.e.childNodes\n\t\t);\n\t}\n\n\t/**\n\t * @returns {void} */\n\ti(anchor) {\n\t\tfor (let i = 0; i < this.n.length; i += 1) {\n\t\t\tinsert(this.t, this.n[i], anchor);\n\t\t}\n\t}\n\n\t/**\n\t * @param {string} html\n\t * @returns {void}\n\t */\n\tp(html) {\n\t\tthis.d();\n\t\tthis.h(html);\n\t\tthis.i(this.a);\n\t}\n\n\t/**\n\t * @returns {void} */\n\td() {\n\t\tthis.n.forEach(detach);\n\t}\n}\n\nexport class HtmlTagHydration extends HtmlTag {\n\t/** @type {Element[]} hydration claimed nodes */\n\tl = undefined;\n\n\tconstructor(is_svg = false, claimed_nodes) {\n\t\tsuper(is_svg);\n\t\tthis.e = this.n = null;\n\t\tthis.l = claimed_nodes;\n\t}\n\n\t/**\n\t * @param {string} html\n\t * @returns {void}\n\t */\n\tc(html) {\n\t\tif (this.l) {\n\t\t\tthis.n = this.l;\n\t\t} else {\n\t\t\tsuper.c(html);\n\t\t}\n\t}\n\n\t/**\n\t * @returns {void} */\n\ti(anchor) {\n\t\tfor (let i = 0; i < this.n.length; i += 1) {\n\t\t\tinsert_hydration(this.t, this.n[i], anchor);\n\t\t}\n\t}\n}\n\n/**\n * @param {NamedNodeMap} attributes\n * @returns {{}}\n */\nexport function attribute_to_object(attributes) {\n\tconst result = {};\n\tfor (const attribute of attributes) {\n\t\tresult[attribute.name] = attribute.value;\n\t}\n\treturn result;\n}\n\nconst escaped = {\n\t'\"': '&quot;',\n\t'&': '&amp;',\n\t'<': '&lt;'\n};\n\nconst regex_attribute_characters_to_escape = /[\"&<]/g;\n\n/**\n * Note that the attribute itself should be surrounded in double quotes\n * @param {any} attribute\n */\nfunction escape_attribute(attribute) {\n\treturn String(attribute).replace(regex_attribute_characters_to_escape, (match) => escaped[match]);\n}\n\n/**\n * @param {Record<string, string>} attributes\n */\nexport function stringify_spread(attributes) {\n\tlet str = ' ';\n\tfor (const key in attributes) {\n\t\tif (attributes[key] != null) {\n\t\t\tstr += `${key}=\"${escape_attribute(attributes[key])}\" `;\n\t\t}\n\t}\n\n\treturn str;\n}\n\n/**\n * @param {HTMLElement} element\n * @returns {{}}\n */\nexport function get_custom_elements_slots(element) {\n\tconst result = {};\n\telement.childNodes.forEach(\n\t\t/** @param {Element} node */ (node) => {\n\t\t\tresult[node.slot || 'default'] = true;\n\t\t}\n\t);\n\treturn result;\n}\n\nexport function construct_svelte_component(component, props) {\n\treturn new component(props);\n}\n\n/**\n * @typedef {Node & {\n * \tclaim_order?: number;\n * \thydrate_init?: true;\n * \tactual_end_child?: NodeEx;\n * \tchildNodes: NodeListOf<NodeEx>;\n * }} NodeEx\n */\n\n/** @typedef {ChildNode & NodeEx} ChildNodeEx */\n\n/** @typedef {NodeEx & { claim_order: number }} NodeEx2 */\n\n/**\n * @typedef {ChildNodeEx[] & {\n * \tclaim_info?: {\n * \t\tlast_index: number;\n * \t\ttotal_claimed: number;\n * \t};\n * }} ChildNodeArray\n */\n","import { append_empty_stylesheet, detach, get_root_for_style } from './dom.js';\nimport { raf } from './environment.js';\n\n// we need to store the information for multiple documents because a Svelte application could also contain iframes\n// https://github.com/sveltejs/svelte/issues/3624\n/** @type {Map<Document | ShadowRoot, import('./private.d.ts').StyleInformation>} */\nconst managed_styles = new Map();\n\nlet active = 0;\n\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\n/**\n * @param {string} str\n * @returns {number}\n */\nfunction hash(str) {\n\tlet hash = 5381;\n\tlet i = str.length;\n\twhile (i--) hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n\treturn hash >>> 0;\n}\n\n/**\n * @param {Document | ShadowRoot} doc\n * @param {Element & ElementCSSInlineStyle} node\n * @returns {{ stylesheet: any; rules: {}; }}\n */\nfunction create_style_information(doc, node) {\n\tconst info = { stylesheet: append_empty_stylesheet(node), rules: {} };\n\tmanaged_styles.set(doc, info);\n\treturn info;\n}\n\n/**\n * @param {Element & ElementCSSInlineStyle} node\n * @param {number} a\n * @param {number} b\n * @param {number} duration\n * @param {number} delay\n * @param {(t: number) => number} ease\n * @param {(t: number, u: number) => string} fn\n * @param {number} uid\n * @returns {string}\n */\nexport function create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n\tconst step = 16.666 / duration;\n\tlet keyframes = '{\\n';\n\tfor (let p = 0; p <= 1; p += step) {\n\t\tconst t = a + (b - a) * ease(p);\n\t\tkeyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n\t}\n\tconst rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n\tconst name = `__svelte_${hash(rule)}_${uid}`;\n\tconst doc = get_root_for_style(node);\n\tconst { stylesheet, rules } = managed_styles.get(doc) || create_style_information(doc, node);\n\tif (!rules[name]) {\n\t\trules[name] = true;\n\t\tstylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n\t}\n\tconst animation = node.style.animation || '';\n\tnode.style.animation = `${\n\t\tanimation ? `${animation}, ` : ''\n\t}${name} ${duration}ms linear ${delay}ms 1 both`;\n\tactive += 1;\n\treturn name;\n}\n\n/**\n * @param {Element & ElementCSSInlineStyle} node\n * @param {string} [name]\n * @returns {void}\n */\nexport function delete_rule(node, name) {\n\tconst previous = (node.style.animation || '').split(', ');\n\tconst next = previous.filter(\n\t\tname\n\t\t\t? (anim) => anim.indexOf(name) < 0 // remove specific animation\n\t\t\t: (anim) => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n\t);\n\tconst deleted = previous.length - next.length;\n\tif (deleted) {\n\t\tnode.style.animation = next.join(', ');\n\t\tactive -= deleted;\n\t\tif (!active) clear_rules();\n\t}\n}\n\n/** @returns {void} */\nexport function clear_rules() {\n\traf(() => {\n\t\tif (active) return;\n\t\tmanaged_styles.forEach((info) => {\n\t\t\tconst { ownerNode } = info.stylesheet;\n\t\t\t// there is no ownerNode if it runs on jsdom.\n\t\t\tif (ownerNode) detach(ownerNode);\n\t\t});\n\t\tmanaged_styles.clear();\n\t});\n}\n","import { custom_event } from './dom.js';\n\nexport let current_component;\n\n/** @returns {void} */\nexport function set_current_component(component) {\n\tcurrent_component = component;\n}\n\nexport function get_current_component() {\n\tif (!current_component) throw new Error('Function called outside component initialization');\n\treturn current_component;\n}\n\n/**\n * Schedules a callback to run immediately before the component is updated after any state change.\n *\n * The first time the callback runs will be before the initial `onMount`\n *\n * https://svelte.dev/docs/svelte#beforeupdate\n * @param {() => any} fn\n * @returns {void}\n */\nexport function beforeUpdate(fn) {\n\tget_current_component().$$.before_update.push(fn);\n}\n\n/**\n * The `onMount` function schedules a callback to run as soon as the component has been mounted to the DOM.\n * It must be called during the component's initialisation (but doesn't need to live *inside* the component;\n * it can be called from an external module).\n *\n * If a function is returned _synchronously_ from `onMount`, it will be called when the component is unmounted.\n *\n * `onMount` does not run inside a [server-side component](https://svelte.dev/docs#run-time-server-side-component-api).\n *\n * https://svelte.dev/docs/svelte#onmount\n * @template T\n * @param {() => import('./private.js').NotFunction<T> | Promise<import('./private.js').NotFunction<T>> | (() => any)} fn\n * @returns {void}\n */\nexport function onMount(fn) {\n\tget_current_component().$$.on_mount.push(fn);\n}\n\n/**\n * Schedules a callback to run immediately after the component has been updated.\n *\n * The first time the callback runs will be after the initial `onMount`\n *\n * https://svelte.dev/docs/svelte#afterupdate\n * @param {() => any} fn\n * @returns {void}\n */\nexport function afterUpdate(fn) {\n\tget_current_component().$$.after_update.push(fn);\n}\n\n/**\n * Schedules a callback to run immediately before the component is unmounted.\n *\n * Out of `onMount`, `beforeUpdate`, `afterUpdate` and `onDestroy`, this is the\n * only one that runs inside a server-side component.\n *\n * https://svelte.dev/docs/svelte#ondestroy\n * @param {() => any} fn\n * @returns {void}\n */\nexport function onDestroy(fn) {\n\tget_current_component().$$.on_destroy.push(fn);\n}\n\n/**\n * Creates an event dispatcher that can be used to dispatch [component events](https://svelte.dev/docs#template-syntax-component-directives-on-eventname).\n * Event dispatchers are functions that can take two arguments: `name` and `detail`.\n *\n * Component events created with `createEventDispatcher` create a\n * [CustomEvent](https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent).\n * These events do not [bubble](https://developer.mozilla.org/en-US/docs/Learn/JavaScript/Building_blocks/Events#Event_bubbling_and_capture).\n * The `detail` argument corresponds to the [CustomEvent.detail](https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent/detail)\n * property and can contain any type of data.\n *\n * The event dispatcher can be typed to narrow the allowed event names and the type of the `detail` argument:\n * ```ts\n * const dispatch = createEventDispatcher<{\n *  loaded: never; // does not take a detail argument\n *  change: string; // takes a detail argument of type string, which is required\n *  optional: number | null; // takes an optional detail argument of type number\n * }>();\n * ```\n *\n * https://svelte.dev/docs/svelte#createeventdispatcher\n * @template {Record<string, any>} [EventMap=any]\n * @returns {import('./public.js').EventDispatcher<EventMap>}\n */\nexport function createEventDispatcher() {\n\tconst component = get_current_component();\n\treturn (type, detail, { cancelable = false } = {}) => {\n\t\tconst callbacks = component.$$.callbacks[type];\n\t\tif (callbacks) {\n\t\t\t// TODO are there situations where events could be dispatched\n\t\t\t// in a server (non-DOM) environment?\n\t\t\tconst event = custom_event(/** @type {string} */ (type), detail, { cancelable });\n\t\t\tcallbacks.slice().forEach((fn) => {\n\t\t\t\tfn.call(component, event);\n\t\t\t});\n\t\t\treturn !event.defaultPrevented;\n\t\t}\n\t\treturn true;\n\t};\n}\n\n/**\n * Associates an arbitrary `context` object with the current component and the specified `key`\n * and returns that object. The context is then available to children of the component\n * (including slotted content) with `getContext`.\n *\n * Like lifecycle functions, this must be called during component initialisation.\n *\n * https://svelte.dev/docs/svelte#setcontext\n * @template T\n * @param {any} key\n * @param {T} context\n * @returns {T}\n */\nexport function setContext(key, context) {\n\tget_current_component().$$.context.set(key, context);\n\treturn context;\n}\n\n/**\n * Retrieves the context that belongs to the closest parent component with the specified `key`.\n * Must be called during component initialisation.\n *\n * https://svelte.dev/docs/svelte#getcontext\n * @template T\n * @param {any} key\n * @returns {T}\n */\nexport function getContext(key) {\n\treturn get_current_component().$$.context.get(key);\n}\n\n/**\n * Retrieves the whole context map that belongs to the closest parent component.\n * Must be called during component initialisation. Useful, for example, if you\n * programmatically create a component and want to pass the existing context to it.\n *\n * https://svelte.dev/docs/svelte#getallcontexts\n * @template {Map<any, any>} [T=Map<any, any>]\n * @returns {T}\n */\nexport function getAllContexts() {\n\treturn get_current_component().$$.context;\n}\n\n/**\n * Checks whether a given `key` has been set in the context of a parent component.\n * Must be called during component initialisation.\n *\n * https://svelte.dev/docs/svelte#hascontext\n * @param {any} key\n * @returns {boolean}\n */\nexport function hasContext(key) {\n\treturn get_current_component().$$.context.has(key);\n}\n\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\n/**\n * @param component\n * @param event\n * @returns {void}\n */\nexport function bubble(component, event) {\n\tconst callbacks = component.$$.callbacks[event.type];\n\tif (callbacks) {\n\t\t// @ts-ignore\n\t\tcallbacks.slice().forEach((fn) => fn.call(this, event));\n\t}\n}\n","import { run_all } from './utils.js';\nimport { current_component, set_current_component } from './lifecycle.js';\n\nexport const dirty_components = [];\nexport const intros = { enabled: false };\nexport const binding_callbacks = [];\n\nlet render_callbacks = [];\n\nconst flush_callbacks = [];\n\nconst resolved_promise = /* @__PURE__ */ Promise.resolve();\n\nlet update_scheduled = false;\n\n/** @returns {void} */\nexport function schedule_update() {\n\tif (!update_scheduled) {\n\t\tupdate_scheduled = true;\n\t\tresolved_promise.then(flush);\n\t}\n}\n\n/** @returns {Promise<void>} */\nexport function tick() {\n\tschedule_update();\n\treturn resolved_promise;\n}\n\n/** @returns {void} */\nexport function add_render_callback(fn) {\n\trender_callbacks.push(fn);\n}\n\n/** @returns {void} */\nexport function add_flush_callback(fn) {\n\tflush_callbacks.push(fn);\n}\n\n// flush() calls callbacks in this order:\n// 1. All beforeUpdate callbacks, in order: parents before children\n// 2. All bind:this callbacks, in reverse order: children before parents.\n// 3. All afterUpdate callbacks, in order: parents before children. EXCEPT\n//    for afterUpdates called during the initial onMount, which are called in\n//    reverse order: children before parents.\n// Since callbacks might update component values, which could trigger another\n// call to flush(), the following steps guard against this:\n// 1. During beforeUpdate, any updated components will be added to the\n//    dirty_components array and will cause a reentrant call to flush(). Because\n//    the flush index is kept outside the function, the reentrant call will pick\n//    up where the earlier call left off and go through all dirty components. The\n//    current_component value is saved and restored so that the reentrant call will\n//    not interfere with the \"parent\" flush() call.\n// 2. bind:this callbacks cannot trigger new flush() calls.\n// 3. During afterUpdate, any updated components will NOT have their afterUpdate\n//    callback called a second time; the seen_callbacks set, outside the flush()\n//    function, guarantees this behavior.\nconst seen_callbacks = new Set();\n\nlet flushidx = 0; // Do *not* move this inside the flush() function\n\n/** @returns {void} */\nexport function flush() {\n\t// Do not reenter flush while dirty components are updated, as this can\n\t// result in an infinite loop. Instead, let the inner flush handle it.\n\t// Reentrancy is ok afterwards for bindings etc.\n\tif (flushidx !== 0) {\n\t\treturn;\n\t}\n\tconst saved_component = current_component;\n\tdo {\n\t\t// first, call beforeUpdate functions\n\t\t// and update components\n\t\ttry {\n\t\t\twhile (flushidx < dirty_components.length) {\n\t\t\t\tconst component = dirty_components[flushidx];\n\t\t\t\tflushidx++;\n\t\t\t\tset_current_component(component);\n\t\t\t\tupdate(component.$$);\n\t\t\t}\n\t\t} catch (e) {\n\t\t\t// reset dirty state to not end up in a deadlocked state and then rethrow\n\t\t\tdirty_components.length = 0;\n\t\t\tflushidx = 0;\n\t\t\tthrow e;\n\t\t}\n\t\tset_current_component(null);\n\t\tdirty_components.length = 0;\n\t\tflushidx = 0;\n\t\twhile (binding_callbacks.length) binding_callbacks.pop()();\n\t\t// then, once components are updated, call\n\t\t// afterUpdate functions. This may cause\n\t\t// subsequent updates...\n\t\tfor (let i = 0; i < render_callbacks.length; i += 1) {\n\t\t\tconst callback = render_callbacks[i];\n\t\t\tif (!seen_callbacks.has(callback)) {\n\t\t\t\t// ...so guard against infinite loops\n\t\t\t\tseen_callbacks.add(callback);\n\t\t\t\tcallback();\n\t\t\t}\n\t\t}\n\t\trender_callbacks.length = 0;\n\t} while (dirty_components.length);\n\twhile (flush_callbacks.length) {\n\t\tflush_callbacks.pop()();\n\t}\n\tupdate_scheduled = false;\n\tseen_callbacks.clear();\n\tset_current_component(saved_component);\n}\n\n/** @returns {void} */\nfunction update($$) {\n\tif ($$.fragment !== null) {\n\t\t$$.update();\n\t\trun_all($$.before_update);\n\t\tconst dirty = $$.dirty;\n\t\t$$.dirty = [-1];\n\t\t$$.fragment && $$.fragment.p($$.ctx, dirty);\n\t\t$$.after_update.forEach(add_render_callback);\n\t}\n}\n\n/**\n * Useful for example to execute remaining `afterUpdate` callbacks before executing `destroy`.\n * @param {Function[]} fns\n * @returns {void}\n */\nexport function flush_render_callbacks(fns) {\n\tconst filtered = [];\n\tconst targets = [];\n\trender_callbacks.forEach((c) => (fns.indexOf(c) === -1 ? filtered.push(c) : targets.push(c)));\n\ttargets.forEach((c) => c());\n\trender_callbacks = filtered;\n}\n","import { identity as linear, is_function, noop, run_all } from './utils.js';\nimport { now } from './environment.js';\nimport { loop } from './loop.js';\nimport { create_rule, delete_rule } from './style_manager.js';\nimport { custom_event } from './dom.js';\nimport { add_render_callback } from './scheduler.js';\n\n/**\n * @type {Promise<void> | null}\n */\nlet promise;\n\n/**\n * @returns {Promise<void>}\n */\nfunction wait() {\n\tif (!promise) {\n\t\tpromise = Promise.resolve();\n\t\tpromise.then(() => {\n\t\t\tpromise = null;\n\t\t});\n\t}\n\treturn promise;\n}\n\n/**\n * @param {Element} node\n * @param {INTRO | OUTRO | boolean} direction\n * @param {'start' | 'end'} kind\n * @returns {void}\n */\nfunction dispatch(node, direction, kind) {\n\tnode.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\n\nconst outroing = new Set();\n\n/**\n * @type {Outro}\n */\nlet outros;\n\n/**\n * @returns {void} */\nexport function group_outros() {\n\toutros = {\n\t\tr: 0,\n\t\tc: [],\n\t\tp: outros // parent group\n\t};\n}\n\n/**\n * @returns {void} */\nexport function check_outros() {\n\tif (!outros.r) {\n\t\trun_all(outros.c);\n\t}\n\toutros = outros.p;\n}\n\n/**\n * @param {import('./private.js').Fragment} block\n * @param {0 | 1} [local]\n * @returns {void}\n */\nexport function transition_in(block, local) {\n\tif (block && block.i) {\n\t\toutroing.delete(block);\n\t\tblock.i(local);\n\t}\n}\n\n/**\n * @param {import('./private.js').Fragment} block\n * @param {0 | 1} local\n * @param {0 | 1} [detach]\n * @param {() => void} [callback]\n * @returns {void}\n */\nexport function transition_out(block, local, detach, callback) {\n\tif (block && block.o) {\n\t\tif (outroing.has(block)) return;\n\t\toutroing.add(block);\n\t\toutros.c.push(() => {\n\t\t\toutroing.delete(block);\n\t\t\tif (callback) {\n\t\t\t\tif (detach) block.d(1);\n\t\t\t\tcallback();\n\t\t\t}\n\t\t});\n\t\tblock.o(local);\n\t} else if (callback) {\n\t\tcallback();\n\t}\n}\n\n/**\n * @type {import('../transition/public.js').TransitionConfig}\n */\nconst null_transition = { duration: 0 };\n\n/**\n * @param {Element & ElementCSSInlineStyle} node\n * @param {TransitionFn} fn\n * @param {any} params\n * @returns {{ start(): void; invalidate(): void; end(): void; }}\n */\nexport function create_in_transition(node, fn, params) {\n\t/**\n\t * @type {TransitionOptions} */\n\tconst options = { direction: 'in' };\n\tlet config = fn(node, params, options);\n\tlet running = false;\n\tlet animation_name;\n\tlet task;\n\tlet uid = 0;\n\n\t/**\n\t * @returns {void} */\n\tfunction cleanup() {\n\t\tif (animation_name) delete_rule(node, animation_name);\n\t}\n\n\t/**\n\t * @returns {void} */\n\tfunction go() {\n\t\tconst {\n\t\t\tdelay = 0,\n\t\t\tduration = 300,\n\t\t\teasing = linear,\n\t\t\ttick = noop,\n\t\t\tcss\n\t\t} = config || null_transition;\n\t\tif (css) animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n\t\ttick(0, 1);\n\t\tconst start_time = now() + delay;\n\t\tconst end_time = start_time + duration;\n\t\tif (task) task.abort();\n\t\trunning = true;\n\t\tadd_render_callback(() => dispatch(node, true, 'start'));\n\t\ttask = loop((now) => {\n\t\t\tif (running) {\n\t\t\t\tif (now >= end_time) {\n\t\t\t\t\ttick(1, 0);\n\t\t\t\t\tdispatch(node, true, 'end');\n\t\t\t\t\tcleanup();\n\t\t\t\t\treturn (running = false);\n\t\t\t\t}\n\t\t\t\tif (now >= start_time) {\n\t\t\t\t\tconst t = easing((now - start_time) / duration);\n\t\t\t\t\ttick(t, 1 - t);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn running;\n\t\t});\n\t}\n\tlet started = false;\n\treturn {\n\t\tstart() {\n\t\t\tif (started) return;\n\t\t\tstarted = true;\n\t\t\tdelete_rule(node);\n\t\t\tif (is_function(config)) {\n\t\t\t\tconfig = config(options);\n\t\t\t\twait().then(go);\n\t\t\t} else {\n\t\t\t\tgo();\n\t\t\t}\n\t\t},\n\t\tinvalidate() {\n\t\t\tstarted = false;\n\t\t},\n\t\tend() {\n\t\t\tif (running) {\n\t\t\t\tcleanup();\n\t\t\t\trunning = false;\n\t\t\t}\n\t\t}\n\t};\n}\n\n/**\n * @param {Element & ElementCSSInlineStyle} node\n * @param {TransitionFn} fn\n * @param {any} params\n * @returns {{ end(reset: any): void; }}\n */\nexport function create_out_transition(node, fn, params) {\n\t/** @type {TransitionOptions} */\n\tconst options = { direction: 'out' };\n\tlet config = fn(node, params, options);\n\tlet running = true;\n\tlet animation_name;\n\tconst group = outros;\n\tgroup.r += 1;\n\t/** @type {boolean} */\n\tlet original_inert_value;\n\n\t/**\n\t * @returns {void} */\n\tfunction go() {\n\t\tconst {\n\t\t\tdelay = 0,\n\t\t\tduration = 300,\n\t\t\teasing = linear,\n\t\t\ttick = noop,\n\t\t\tcss\n\t\t} = config || null_transition;\n\n\t\tif (css) animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n\n\t\tconst start_time = now() + delay;\n\t\tconst end_time = start_time + duration;\n\t\tadd_render_callback(() => dispatch(node, false, 'start'));\n\n\t\tif ('inert' in node) {\n\t\t\toriginal_inert_value = /** @type {HTMLElement} */ (node).inert;\n\t\t\tnode.inert = true;\n\t\t}\n\n\t\tloop((now) => {\n\t\t\tif (running) {\n\t\t\t\tif (now >= end_time) {\n\t\t\t\t\ttick(0, 1);\n\t\t\t\t\tdispatch(node, false, 'end');\n\t\t\t\t\tif (!--group.r) {\n\t\t\t\t\t\t// this will result in `end()` being called,\n\t\t\t\t\t\t// so we don't need to clean up here\n\t\t\t\t\t\trun_all(group.c);\n\t\t\t\t\t}\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\tif (now >= start_time) {\n\t\t\t\t\tconst t = easing((now - start_time) / duration);\n\t\t\t\t\ttick(1 - t, t);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn running;\n\t\t});\n\t}\n\n\tif (is_function(config)) {\n\t\twait().then(() => {\n\t\t\t// @ts-ignore\n\t\t\tconfig = config(options);\n\t\t\tgo();\n\t\t});\n\t} else {\n\t\tgo();\n\t}\n\n\treturn {\n\t\tend(reset) {\n\t\t\tif (reset && 'inert' in node) {\n\t\t\t\tnode.inert = original_inert_value;\n\t\t\t}\n\t\t\tif (reset && config.tick) {\n\t\t\t\tconfig.tick(1, 0);\n\t\t\t}\n\t\t\tif (running) {\n\t\t\t\tif (animation_name) delete_rule(node, animation_name);\n\t\t\t\trunning = false;\n\t\t\t}\n\t\t}\n\t};\n}\n\n/**\n * @param {Element & ElementCSSInlineStyle} node\n * @param {TransitionFn} fn\n * @param {any} params\n * @param {boolean} intro\n * @returns {{ run(b: 0 | 1): void; end(): void; }}\n */\nexport function create_bidirectional_transition(node, fn, params, intro) {\n\t/**\n\t * @type {TransitionOptions} */\n\tconst options = { direction: 'both' };\n\tlet config = fn(node, params, options);\n\tlet t = intro ? 0 : 1;\n\n\t/**\n\t * @type {Program | null} */\n\tlet running_program = null;\n\n\t/**\n\t * @type {PendingProgram | null} */\n\tlet pending_program = null;\n\tlet animation_name = null;\n\n\t/** @type {boolean} */\n\tlet original_inert_value;\n\n\t/**\n\t * @returns {void} */\n\tfunction clear_animation() {\n\t\tif (animation_name) delete_rule(node, animation_name);\n\t}\n\n\t/**\n\t * @param {PendingProgram} program\n\t * @param {number} duration\n\t * @returns {Program}\n\t */\n\tfunction init(program, duration) {\n\t\tconst d = /** @type {Program['d']} */ (program.b - t);\n\t\tduration *= Math.abs(d);\n\t\treturn {\n\t\t\ta: t,\n\t\t\tb: program.b,\n\t\t\td,\n\t\t\tduration,\n\t\t\tstart: program.start,\n\t\t\tend: program.start + duration,\n\t\t\tgroup: program.group\n\t\t};\n\t}\n\n\t/**\n\t * @param {INTRO | OUTRO} b\n\t * @returns {void}\n\t */\n\tfunction go(b) {\n\t\tconst {\n\t\t\tdelay = 0,\n\t\t\tduration = 300,\n\t\t\teasing = linear,\n\t\t\ttick = noop,\n\t\t\tcss\n\t\t} = config || null_transition;\n\n\t\t/**\n\t\t * @type {PendingProgram} */\n\t\tconst program = {\n\t\t\tstart: now() + delay,\n\t\t\tb\n\t\t};\n\n\t\tif (!b) {\n\t\t\t// @ts-ignore todo: improve typings\n\t\t\tprogram.group = outros;\n\t\t\toutros.r += 1;\n\t\t}\n\n\t\tif ('inert' in node) {\n\t\t\tif (b) {\n\t\t\t\tif (original_inert_value !== undefined) {\n\t\t\t\t\t// aborted/reversed outro — restore previous inert value\n\t\t\t\t\tnode.inert = original_inert_value;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\toriginal_inert_value = /** @type {HTMLElement} */ (node).inert;\n\t\t\t\tnode.inert = true;\n\t\t\t}\n\t\t}\n\n\t\tif (running_program || pending_program) {\n\t\t\tpending_program = program;\n\t\t} else {\n\t\t\t// if this is an intro, and there's a delay, we need to do\n\t\t\t// an initial tick and/or apply CSS animation immediately\n\t\t\tif (css) {\n\t\t\t\tclear_animation();\n\t\t\t\tanimation_name = create_rule(node, t, b, duration, delay, easing, css);\n\t\t\t}\n\t\t\tif (b) tick(0, 1);\n\t\t\trunning_program = init(program, duration);\n\t\t\tadd_render_callback(() => dispatch(node, b, 'start'));\n\t\t\tloop((now) => {\n\t\t\t\tif (pending_program && now > pending_program.start) {\n\t\t\t\t\trunning_program = init(pending_program, duration);\n\t\t\t\t\tpending_program = null;\n\t\t\t\t\tdispatch(node, running_program.b, 'start');\n\t\t\t\t\tif (css) {\n\t\t\t\t\t\tclear_animation();\n\t\t\t\t\t\tanimation_name = create_rule(\n\t\t\t\t\t\t\tnode,\n\t\t\t\t\t\t\tt,\n\t\t\t\t\t\t\trunning_program.b,\n\t\t\t\t\t\t\trunning_program.duration,\n\t\t\t\t\t\t\t0,\n\t\t\t\t\t\t\teasing,\n\t\t\t\t\t\t\tconfig.css\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (running_program) {\n\t\t\t\t\tif (now >= running_program.end) {\n\t\t\t\t\t\ttick((t = running_program.b), 1 - t);\n\t\t\t\t\t\tdispatch(node, running_program.b, 'end');\n\t\t\t\t\t\tif (!pending_program) {\n\t\t\t\t\t\t\t// we're done\n\t\t\t\t\t\t\tif (running_program.b) {\n\t\t\t\t\t\t\t\t// intro — we can tidy up immediately\n\t\t\t\t\t\t\t\tclear_animation();\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t// outro — needs to be coordinated\n\t\t\t\t\t\t\t\tif (!--running_program.group.r) run_all(running_program.group.c);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\trunning_program = null;\n\t\t\t\t\t} else if (now >= running_program.start) {\n\t\t\t\t\t\tconst p = now - running_program.start;\n\t\t\t\t\t\tt = running_program.a + running_program.d * easing(p / running_program.duration);\n\t\t\t\t\t\ttick(t, 1 - t);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn !!(running_program || pending_program);\n\t\t\t});\n\t\t}\n\t}\n\treturn {\n\t\trun(b) {\n\t\t\tif (is_function(config)) {\n\t\t\t\twait().then(() => {\n\t\t\t\t\tconst opts = { direction: b ? 'in' : 'out' };\n\t\t\t\t\t// @ts-ignore\n\t\t\t\t\tconfig = config(opts);\n\t\t\t\t\tgo(b);\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tgo(b);\n\t\t\t}\n\t\t},\n\t\tend() {\n\t\t\tclear_animation();\n\t\t\trunning_program = pending_program = null;\n\t\t}\n\t};\n}\n\n/** @typedef {1} INTRO */\n/** @typedef {0} OUTRO */\n/** @typedef {{ direction: 'in' | 'out' | 'both' }} TransitionOptions */\n/** @typedef {(node: Element, params: any, options: TransitionOptions) => import('../transition/public.js').TransitionConfig} TransitionFn */\n\n/**\n * @typedef {Object} Outro\n * @property {number} r\n * @property {Function[]} c\n * @property {Object} p\n */\n\n/**\n * @typedef {Object} PendingProgram\n * @property {number} start\n * @property {INTRO|OUTRO} b\n * @property {Outro} [group]\n */\n\n/**\n * @typedef {Object} Program\n * @property {number} a\n * @property {INTRO|OUTRO} b\n * @property {1|-1} d\n * @property {number} duration\n * @property {number} start\n * @property {number} end\n * @property {Outro} [group]\n */\n","import { transition_in, transition_out } from './transitions.js';\nimport { run_all } from './utils.js';\n\n// general each functions:\n\nexport function ensure_array_like(array_like_or_iterator) {\n\treturn array_like_or_iterator?.length !== undefined\n\t\t? array_like_or_iterator\n\t\t: Array.from(array_like_or_iterator);\n}\n\n// keyed each functions:\n\n/** @returns {void} */\nexport function destroy_block(block, lookup) {\n\tblock.d(1);\n\tlookup.delete(block.key);\n}\n\n/** @returns {void} */\nexport function outro_and_destroy_block(block, lookup) {\n\ttransition_out(block, 1, 1, () => {\n\t\tlookup.delete(block.key);\n\t});\n}\n\n/** @returns {void} */\nexport function fix_and_destroy_block(block, lookup) {\n\tblock.f();\n\tdestroy_block(block, lookup);\n}\n\n/** @returns {void} */\nexport function fix_and_outro_and_destroy_block(block, lookup) {\n\tblock.f();\n\toutro_and_destroy_block(block, lookup);\n}\n\n/** @returns {any[]} */\nexport function update_keyed_each(\n\told_blocks,\n\tdirty,\n\tget_key,\n\tdynamic,\n\tctx,\n\tlist,\n\tlookup,\n\tnode,\n\tdestroy,\n\tcreate_each_block,\n\tnext,\n\tget_context\n) {\n\tlet o = old_blocks.length;\n\tlet n = list.length;\n\tlet i = o;\n\tconst old_indexes = {};\n\twhile (i--) old_indexes[old_blocks[i].key] = i;\n\tconst new_blocks = [];\n\tconst new_lookup = new Map();\n\tconst deltas = new Map();\n\tconst updates = [];\n\ti = n;\n\twhile (i--) {\n\t\tconst child_ctx = get_context(ctx, list, i);\n\t\tconst key = get_key(child_ctx);\n\t\tlet block = lookup.get(key);\n\t\tif (!block) {\n\t\t\tblock = create_each_block(key, child_ctx);\n\t\t\tblock.c();\n\t\t} else if (dynamic) {\n\t\t\t// defer updates until all the DOM shuffling is done\n\t\t\tupdates.push(() => block.p(child_ctx, dirty));\n\t\t}\n\t\tnew_lookup.set(key, (new_blocks[i] = block));\n\t\tif (key in old_indexes) deltas.set(key, Math.abs(i - old_indexes[key]));\n\t}\n\tconst will_move = new Set();\n\tconst did_move = new Set();\n\t/** @returns {void} */\n\tfunction insert(block) {\n\t\ttransition_in(block, 1);\n\t\tblock.m(node, next);\n\t\tlookup.set(block.key, block);\n\t\tnext = block.first;\n\t\tn--;\n\t}\n\twhile (o && n) {\n\t\tconst new_block = new_blocks[n - 1];\n\t\tconst old_block = old_blocks[o - 1];\n\t\tconst new_key = new_block.key;\n\t\tconst old_key = old_block.key;\n\t\tif (new_block === old_block) {\n\t\t\t// do nothing\n\t\t\tnext = new_block.first;\n\t\t\to--;\n\t\t\tn--;\n\t\t} else if (!new_lookup.has(old_key)) {\n\t\t\t// remove old block\n\t\t\tdestroy(old_block, lookup);\n\t\t\to--;\n\t\t} else if (!lookup.has(new_key) || will_move.has(new_key)) {\n\t\t\tinsert(new_block);\n\t\t} else if (did_move.has(old_key)) {\n\t\t\to--;\n\t\t} else if (deltas.get(new_key) > deltas.get(old_key)) {\n\t\t\tdid_move.add(new_key);\n\t\t\tinsert(new_block);\n\t\t} else {\n\t\t\twill_move.add(old_key);\n\t\t\to--;\n\t\t}\n\t}\n\twhile (o--) {\n\t\tconst old_block = old_blocks[o];\n\t\tif (!new_lookup.has(old_block.key)) destroy(old_block, lookup);\n\t}\n\twhile (n) insert(new_blocks[n - 1]);\n\trun_all(updates);\n\treturn new_blocks;\n}\n\n/** @returns {void} */\nexport function validate_each_keys(ctx, list, get_context, get_key) {\n\tconst keys = new Map();\n\tfor (let i = 0; i < list.length; i++) {\n\t\tconst key = get_key(get_context(ctx, list, i));\n\t\tif (keys.has(key)) {\n\t\t\tlet value = '';\n\t\t\ttry {\n\t\t\t\tvalue = `with value '${String(key)}' `;\n\t\t\t} catch (e) {\n\t\t\t\t// can't stringify\n\t\t\t}\n\t\t\tthrow new Error(\n\t\t\t\t`Cannot have duplicate keys in a keyed each: Keys at index ${keys.get(\n\t\t\t\t\tkey\n\t\t\t\t)} and ${i} ${value}are duplicates`\n\t\t\t);\n\t\t}\n\t\tkeys.set(key, i);\n\t}\n}\n","import {\n\tadd_render_callback,\n\tflush,\n\tflush_render_callbacks,\n\tschedule_update,\n\tdirty_components\n} from './scheduler.js';\nimport { current_component, set_current_component } from './lifecycle.js';\nimport { blank_object, is_empty, is_function, run, run_all, noop } from './utils.js';\nimport {\n\tchildren,\n\tdetach,\n\tstart_hydrating,\n\tend_hydrating,\n\tget_custom_elements_slots,\n\tinsert,\n\telement,\n\tattr\n} from './dom.js';\nimport { transition_in } from './transitions.js';\n\n/** @returns {void} */\nexport function bind(component, name, callback) {\n\tconst index = component.$$.props[name];\n\tif (index !== undefined) {\n\t\tcomponent.$$.bound[index] = callback;\n\t\tcallback(component.$$.ctx[index]);\n\t}\n}\n\n/** @returns {void} */\nexport function create_component(block) {\n\tblock && block.c();\n}\n\n/** @returns {void} */\nexport function claim_component(block, parent_nodes) {\n\tblock && block.l(parent_nodes);\n}\n\n/** @returns {void} */\nexport function mount_component(component, target, anchor) {\n\tconst { fragment, after_update } = component.$$;\n\tfragment && fragment.m(target, anchor);\n\t// onMount happens before the initial afterUpdate\n\tadd_render_callback(() => {\n\t\tconst new_on_destroy = component.$$.on_mount.map(run).filter(is_function);\n\t\t// if the component was destroyed immediately\n\t\t// it will update the `$$.on_destroy` reference to `null`.\n\t\t// the destructured on_destroy may still reference to the old array\n\t\tif (component.$$.on_destroy) {\n\t\t\tcomponent.$$.on_destroy.push(...new_on_destroy);\n\t\t} else {\n\t\t\t// Edge case - component was destroyed immediately,\n\t\t\t// most likely as a result of a binding initialising\n\t\t\trun_all(new_on_destroy);\n\t\t}\n\t\tcomponent.$$.on_mount = [];\n\t});\n\tafter_update.forEach(add_render_callback);\n}\n\n/** @returns {void} */\nexport function destroy_component(component, detaching) {\n\tconst $$ = component.$$;\n\tif ($$.fragment !== null) {\n\t\tflush_render_callbacks($$.after_update);\n\t\trun_all($$.on_destroy);\n\t\t$$.fragment && $$.fragment.d(detaching);\n\t\t// TODO null out other refs, including component.$$ (but need to\n\t\t// preserve final state?)\n\t\t$$.on_destroy = $$.fragment = null;\n\t\t$$.ctx = [];\n\t}\n}\n\n/** @returns {void} */\nfunction make_dirty(component, i) {\n\tif (component.$$.dirty[0] === -1) {\n\t\tdirty_components.push(component);\n\t\tschedule_update();\n\t\tcomponent.$$.dirty.fill(0);\n\t}\n\tcomponent.$$.dirty[(i / 31) | 0] |= 1 << i % 31;\n}\n\n// TODO: Document the other params\n/**\n * @param {SvelteComponent} component\n * @param {import('./public.js').ComponentConstructorOptions} options\n *\n * @param {import('./utils.js')['not_equal']} not_equal Used to compare props and state values.\n * @param {(target: Element | ShadowRoot) => void} [append_styles] Function that appends styles to the DOM when the component is first initialised.\n * This will be the `add_css` function from the compiled component.\n *\n * @returns {void}\n */\nexport function init(\n\tcomponent,\n\toptions,\n\tinstance,\n\tcreate_fragment,\n\tnot_equal,\n\tprops,\n\tappend_styles = null,\n\tdirty = [-1]\n) {\n\tconst parent_component = current_component;\n\tset_current_component(component);\n\t/** @type {import('./private.js').T$$} */\n\tconst $$ = (component.$$ = {\n\t\tfragment: null,\n\t\tctx: [],\n\t\t// state\n\t\tprops,\n\t\tupdate: noop,\n\t\tnot_equal,\n\t\tbound: blank_object(),\n\t\t// lifecycle\n\t\ton_mount: [],\n\t\ton_destroy: [],\n\t\ton_disconnect: [],\n\t\tbefore_update: [],\n\t\tafter_update: [],\n\t\tcontext: new Map(options.context || (parent_component ? parent_component.$$.context : [])),\n\t\t// everything else\n\t\tcallbacks: blank_object(),\n\t\tdirty,\n\t\tskip_bound: false,\n\t\troot: options.target || parent_component.$$.root\n\t});\n\tappend_styles && append_styles($$.root);\n\tlet ready = false;\n\t$$.ctx = instance\n\t\t? instance(component, options.props || {}, (i, ret, ...rest) => {\n\t\t\t\tconst value = rest.length ? rest[0] : ret;\n\t\t\t\tif ($$.ctx && not_equal($$.ctx[i], ($$.ctx[i] = value))) {\n\t\t\t\t\tif (!$$.skip_bound && $$.bound[i]) $$.bound[i](value);\n\t\t\t\t\tif (ready) make_dirty(component, i);\n\t\t\t\t}\n\t\t\t\treturn ret;\n\t\t  })\n\t\t: [];\n\t$$.update();\n\tready = true;\n\trun_all($$.before_update);\n\t// `false` as a special case of no DOM component\n\t$$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n\tif (options.target) {\n\t\tif (options.hydrate) {\n\t\t\tstart_hydrating();\n\t\t\t// TODO: what is the correct type here?\n\t\t\t// @ts-expect-error\n\t\t\tconst nodes = children(options.target);\n\t\t\t$$.fragment && $$.fragment.l(nodes);\n\t\t\tnodes.forEach(detach);\n\t\t} else {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n\t\t\t$$.fragment && $$.fragment.c();\n\t\t}\n\t\tif (options.intro) transition_in(component.$$.fragment);\n\t\tmount_component(component, options.target, options.anchor);\n\t\tend_hydrating();\n\t\tflush();\n\t}\n\tset_current_component(parent_component);\n}\n\nexport let SvelteElement;\n\nif (typeof HTMLElement === 'function') {\n\tSvelteElement = class extends HTMLElement {\n\t\t/** The Svelte component constructor */\n\t\t$$ctor;\n\t\t/** Slots */\n\t\t$$s;\n\t\t/** The Svelte component instance */\n\t\t$$c;\n\t\t/** Whether or not the custom element is connected */\n\t\t$$cn = false;\n\t\t/** Component props data */\n\t\t$$d = {};\n\t\t/** `true` if currently in the process of reflecting component props back to attributes */\n\t\t$$r = false;\n\t\t/** @type {Record<string, CustomElementPropDefinition>} Props definition (name, reflected, type etc) */\n\t\t$$p_d = {};\n\t\t/** @type {Record<string, Function[]>} Event listeners */\n\t\t$$l = {};\n\t\t/** @type {Map<Function, Function>} Event listener unsubscribe functions */\n\t\t$$l_u = new Map();\n\n\t\tconstructor($$componentCtor, $$slots, use_shadow_dom) {\n\t\t\tsuper();\n\t\t\tthis.$$ctor = $$componentCtor;\n\t\t\tthis.$$s = $$slots;\n\t\t\tif (use_shadow_dom) {\n\t\t\t\tthis.attachShadow({ mode: 'open' });\n\t\t\t}\n\t\t}\n\n\t\taddEventListener(type, listener, options) {\n\t\t\t// We can't determine upfront if the event is a custom event or not, so we have to\n\t\t\t// listen to both. If someone uses a custom event with the same name as a regular\n\t\t\t// browser event, this fires twice - we can't avoid that.\n\t\t\tthis.$$l[type] = this.$$l[type] || [];\n\t\t\tthis.$$l[type].push(listener);\n\t\t\tif (this.$$c) {\n\t\t\t\tconst unsub = this.$$c.$on(type, listener);\n\t\t\t\tthis.$$l_u.set(listener, unsub);\n\t\t\t}\n\t\t\tsuper.addEventListener(type, listener, options);\n\t\t}\n\n\t\tremoveEventListener(type, listener, options) {\n\t\t\tsuper.removeEventListener(type, listener, options);\n\t\t\tif (this.$$c) {\n\t\t\t\tconst unsub = this.$$l_u.get(listener);\n\t\t\t\tif (unsub) {\n\t\t\t\t\tunsub();\n\t\t\t\t\tthis.$$l_u.delete(listener);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tasync connectedCallback() {\n\t\t\tthis.$$cn = true;\n\t\t\tif (!this.$$c) {\n\t\t\t\t// We wait one tick to let possible child slot elements be created/mounted\n\t\t\t\tawait Promise.resolve();\n\t\t\t\tif (!this.$$cn || this.$$c) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tfunction create_slot(name) {\n\t\t\t\t\treturn () => {\n\t\t\t\t\t\tlet node;\n\t\t\t\t\t\tconst obj = {\n\t\t\t\t\t\t\tc: function create() {\n\t\t\t\t\t\t\t\tnode = element('slot');\n\t\t\t\t\t\t\t\tif (name !== 'default') {\n\t\t\t\t\t\t\t\t\tattr(node, 'name', name);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t/**\n\t\t\t\t\t\t\t * @param {HTMLElement} target\n\t\t\t\t\t\t\t * @param {HTMLElement} [anchor]\n\t\t\t\t\t\t\t */\n\t\t\t\t\t\t\tm: function mount(target, anchor) {\n\t\t\t\t\t\t\t\tinsert(target, node, anchor);\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\td: function destroy(detaching) {\n\t\t\t\t\t\t\t\tif (detaching) {\n\t\t\t\t\t\t\t\t\tdetach(node);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t};\n\t\t\t\t\t\treturn obj;\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t\tconst $$slots = {};\n\t\t\t\tconst existing_slots = get_custom_elements_slots(this);\n\t\t\t\tfor (const name of this.$$s) {\n\t\t\t\t\tif (name in existing_slots) {\n\t\t\t\t\t\t$$slots[name] = [create_slot(name)];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tfor (const attribute of this.attributes) {\n\t\t\t\t\t// this.$$data takes precedence over this.attributes\n\t\t\t\t\tconst name = this.$$g_p(attribute.name);\n\t\t\t\t\tif (!(name in this.$$d)) {\n\t\t\t\t\t\tthis.$$d[name] = get_custom_element_value(name, attribute.value, this.$$p_d, 'toProp');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t// Port over props that were set programmatically before ce was initialized\n\t\t\t\tfor (const key in this.$$p_d) {\n\t\t\t\t\tif (!(key in this.$$d) && this[key] !== undefined) {\n\t\t\t\t\t\tthis.$$d[key] = this[key]; // don't transform, these were set through JavaScript\n\t\t\t\t\t\tdelete this[key]; // remove the property that shadows the getter/setter\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tthis.$$c = new this.$$ctor({\n\t\t\t\t\ttarget: this.shadowRoot || this,\n\t\t\t\t\tprops: {\n\t\t\t\t\t\t...this.$$d,\n\t\t\t\t\t\t$$slots,\n\t\t\t\t\t\t$$scope: {\n\t\t\t\t\t\t\tctx: []\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\t// Reflect component props as attributes\n\t\t\t\tconst reflect_attributes = () => {\n\t\t\t\t\tthis.$$r = true;\n\t\t\t\t\tfor (const key in this.$$p_d) {\n\t\t\t\t\t\tthis.$$d[key] = this.$$c.$$.ctx[this.$$c.$$.props[key]];\n\t\t\t\t\t\tif (this.$$p_d[key].reflect) {\n\t\t\t\t\t\t\tconst attribute_value = get_custom_element_value(\n\t\t\t\t\t\t\t\tkey,\n\t\t\t\t\t\t\t\tthis.$$d[key],\n\t\t\t\t\t\t\t\tthis.$$p_d,\n\t\t\t\t\t\t\t\t'toAttribute'\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tif (attribute_value == null) {\n\t\t\t\t\t\t\t\tthis.removeAttribute(this.$$p_d[key].attribute || key);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tthis.setAttribute(this.$$p_d[key].attribute || key, attribute_value);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tthis.$$r = false;\n\t\t\t\t};\n\t\t\t\tthis.$$c.$$.after_update.push(reflect_attributes);\n\t\t\t\treflect_attributes(); // once initially because after_update is added too late for first render\n\n\t\t\t\tfor (const type in this.$$l) {\n\t\t\t\t\tfor (const listener of this.$$l[type]) {\n\t\t\t\t\t\tconst unsub = this.$$c.$on(type, listener);\n\t\t\t\t\t\tthis.$$l_u.set(listener, unsub);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tthis.$$l = {};\n\t\t\t}\n\t\t}\n\n\t\t// We don't need this when working within Svelte code, but for compatibility of people using this outside of Svelte\n\t\t// and setting attributes through setAttribute etc, this is helpful\n\t\tattributeChangedCallback(attr, _oldValue, newValue) {\n\t\t\tif (this.$$r) return;\n\t\t\tattr = this.$$g_p(attr);\n\t\t\tthis.$$d[attr] = get_custom_element_value(attr, newValue, this.$$p_d, 'toProp');\n\t\t\tthis.$$c?.$set({ [attr]: this.$$d[attr] });\n\t\t}\n\n\t\tdisconnectedCallback() {\n\t\t\tthis.$$cn = false;\n\t\t\t// In a microtask, because this could be a move within the DOM\n\t\t\tPromise.resolve().then(() => {\n\t\t\t\tif (!this.$$cn && this.$$c) {\n\t\t\t\t\tthis.$$c.$destroy();\n\t\t\t\t\tthis.$$c = undefined;\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\t$$g_p(attribute_name) {\n\t\t\treturn (\n\t\t\t\tObject.keys(this.$$p_d).find(\n\t\t\t\t\t(key) =>\n\t\t\t\t\t\tthis.$$p_d[key].attribute === attribute_name ||\n\t\t\t\t\t\t(!this.$$p_d[key].attribute && key.toLowerCase() === attribute_name)\n\t\t\t\t) || attribute_name\n\t\t\t);\n\t\t}\n\t};\n}\n\n/**\n * @param {string} prop\n * @param {any} value\n * @param {Record<string, CustomElementPropDefinition>} props_definition\n * @param {'toAttribute' | 'toProp'} [transform]\n */\nfunction get_custom_element_value(prop, value, props_definition, transform) {\n\tconst type = props_definition[prop]?.type;\n\tvalue = type === 'Boolean' && typeof value !== 'boolean' ? value != null : value;\n\tif (!transform || !props_definition[prop]) {\n\t\treturn value;\n\t} else if (transform === 'toAttribute') {\n\t\tswitch (type) {\n\t\t\tcase 'Object':\n\t\t\tcase 'Array':\n\t\t\t\treturn value == null ? null : JSON.stringify(value);\n\t\t\tcase 'Boolean':\n\t\t\t\treturn value ? '' : null;\n\t\t\tcase 'Number':\n\t\t\t\treturn value == null ? null : value;\n\t\t\tdefault:\n\t\t\t\treturn value;\n\t\t}\n\t} else {\n\t\tswitch (type) {\n\t\t\tcase 'Object':\n\t\t\tcase 'Array':\n\t\t\t\treturn value && JSON.parse(value);\n\t\t\tcase 'Boolean':\n\t\t\t\treturn value; // conversion already handled above\n\t\t\tcase 'Number':\n\t\t\t\treturn value != null ? +value : value;\n\t\t\tdefault:\n\t\t\t\treturn value;\n\t\t}\n\t}\n}\n\n/**\n * @internal\n *\n * Turn a Svelte component into a custom element.\n * @param {import('./public.js').ComponentType} Component  A Svelte component constructor\n * @param {Record<string, CustomElementPropDefinition>} props_definition  The props to observe\n * @param {string[]} slots  The slots to create\n * @param {string[]} accessors  Other accessors besides the ones for props the component has\n * @param {boolean} use_shadow_dom  Whether to use shadow DOM\n * @param {(ce: new () => HTMLElement) => new () => HTMLElement} [extend]\n */\nexport function create_custom_element(\n\tComponent,\n\tprops_definition,\n\tslots,\n\taccessors,\n\tuse_shadow_dom,\n\textend\n) {\n\tlet Class = class extends SvelteElement {\n\t\tconstructor() {\n\t\t\tsuper(Component, slots, use_shadow_dom);\n\t\t\tthis.$$p_d = props_definition;\n\t\t}\n\t\tstatic get observedAttributes() {\n\t\t\treturn Object.keys(props_definition).map((key) =>\n\t\t\t\t(props_definition[key].attribute || key).toLowerCase()\n\t\t\t);\n\t\t}\n\t};\n\tObject.keys(props_definition).forEach((prop) => {\n\t\tObject.defineProperty(Class.prototype, prop, {\n\t\t\tget() {\n\t\t\t\treturn this.$$c && prop in this.$$c ? this.$$c[prop] : this.$$d[prop];\n\t\t\t},\n\t\t\tset(value) {\n\t\t\t\tvalue = get_custom_element_value(prop, value, props_definition);\n\t\t\t\tthis.$$d[prop] = value;\n\t\t\t\tthis.$$c?.$set({ [prop]: value });\n\t\t\t}\n\t\t});\n\t});\n\taccessors.forEach((accessor) => {\n\t\tObject.defineProperty(Class.prototype, accessor, {\n\t\t\tget() {\n\t\t\t\treturn this.$$c?.[accessor];\n\t\t\t}\n\t\t});\n\t});\n\tif (extend) {\n\t\t// @ts-expect-error - assigning here is fine\n\t\tClass = extend(Class);\n\t}\n\tComponent.element = /** @type {any} */ (Class);\n\treturn Class;\n}\n\n/**\n * Base class for Svelte components. Used when dev=false.\n *\n * @template {Record<string, any>} [Props=any]\n * @template {Record<string, any>} [Events=any]\n */\nexport class SvelteComponent {\n\t/**\n\t * ### PRIVATE API\n\t *\n\t * Do not use, may change at any time\n\t *\n\t * @type {any}\n\t */\n\t$$ = undefined;\n\t/**\n\t * ### PRIVATE API\n\t *\n\t * Do not use, may change at any time\n\t *\n\t * @type {any}\n\t */\n\t$$set = undefined;\n\n\t/** @returns {void} */\n\t$destroy() {\n\t\tdestroy_component(this, 1);\n\t\tthis.$destroy = noop;\n\t}\n\n\t/**\n\t * @template {Extract<keyof Events, string>} K\n\t * @param {K} type\n\t * @param {((e: Events[K]) => void) | null | undefined} callback\n\t * @returns {() => void}\n\t */\n\t$on(type, callback) {\n\t\tif (!is_function(callback)) {\n\t\t\treturn noop;\n\t\t}\n\t\tconst callbacks = this.$$.callbacks[type] || (this.$$.callbacks[type] = []);\n\t\tcallbacks.push(callback);\n\t\treturn () => {\n\t\t\tconst index = callbacks.indexOf(callback);\n\t\t\tif (index !== -1) callbacks.splice(index, 1);\n\t\t};\n\t}\n\n\t/**\n\t * @param {Partial<Props>} props\n\t * @returns {void}\n\t */\n\t$set(props) {\n\t\tif (this.$$set && !is_empty(props)) {\n\t\t\tthis.$$.skip_bound = true;\n\t\t\tthis.$$set(props);\n\t\t\tthis.$$.skip_bound = false;\n\t\t}\n\t}\n}\n\n/**\n * @typedef {Object} CustomElementPropDefinition\n * @property {string} [attribute]\n * @property {boolean} [reflect]\n * @property {'String'|'Boolean'|'Number'|'Array'|'Object'} [type]\n */\n","import { cubicOut, cubicInOut, linear } from '../easing/index.js';\nimport { assign, split_css_unit, is_function } from '../internal/index.js';\n\n/**\n * Animates a `blur` filter alongside an element's opacity.\n *\n * https://svelte.dev/docs/svelte-transition#blur\n * @param {Element} node\n * @param {import('./public').BlurParams} [params]\n * @returns {import('./public').TransitionConfig}\n */\nexport function blur(\n\tnode,\n\t{ delay = 0, duration = 400, easing = cubicInOut, amount = 5, opacity = 0 } = {}\n) {\n\tconst style = getComputedStyle(node);\n\tconst target_opacity = +style.opacity;\n\tconst f = style.filter === 'none' ? '' : style.filter;\n\tconst od = target_opacity * (1 - opacity);\n\tconst [value, unit] = split_css_unit(amount);\n\treturn {\n\t\tdelay,\n\t\tduration,\n\t\teasing,\n\t\tcss: (_t, u) => `opacity: ${target_opacity - od * u}; filter: ${f} blur(${u * value}${unit});`\n\t};\n}\n\n/**\n * Animates the opacity of an element from 0 to the current opacity for `in` transitions and from the current opacity to 0 for `out` transitions.\n *\n * https://svelte.dev/docs/svelte-transition#fade\n * @param {Element} node\n * @param {import('./public').FadeParams} [params]\n * @returns {import('./public').TransitionConfig}\n */\nexport function fade(node, { delay = 0, duration = 400, easing = linear } = {}) {\n\tconst o = +getComputedStyle(node).opacity;\n\treturn {\n\t\tdelay,\n\t\tduration,\n\t\teasing,\n\t\tcss: (t) => `opacity: ${t * o}`\n\t};\n}\n\n/**\n * Animates the x and y positions and the opacity of an element. `in` transitions animate from the provided values, passed as parameters to the element's default values. `out` transitions animate from the element's default values to the provided values.\n *\n * https://svelte.dev/docs/svelte-transition#fly\n * @param {Element} node\n * @param {import('./public').FlyParams} [params]\n * @returns {import('./public').TransitionConfig}\n */\nexport function fly(\n\tnode,\n\t{ delay = 0, duration = 400, easing = cubicOut, x = 0, y = 0, opacity = 0 } = {}\n) {\n\tconst style = getComputedStyle(node);\n\tconst target_opacity = +style.opacity;\n\tconst transform = style.transform === 'none' ? '' : style.transform;\n\tconst od = target_opacity * (1 - opacity);\n\tconst [xValue, xUnit] = split_css_unit(x);\n\tconst [yValue, yUnit] = split_css_unit(y);\n\treturn {\n\t\tdelay,\n\t\tduration,\n\t\teasing,\n\t\tcss: (t, u) => `\n\t\t\ttransform: ${transform} translate(${(1 - t) * xValue}${xUnit}, ${(1 - t) * yValue}${yUnit});\n\t\t\topacity: ${target_opacity - od * u}`\n\t};\n}\n\n/**\n * Slides an element in and out.\n *\n * https://svelte.dev/docs/svelte-transition#slide\n * @param {Element} node\n * @param {import('./public').SlideParams} [params]\n * @returns {import('./public').TransitionConfig}\n */\nexport function slide(node, { delay = 0, duration = 400, easing = cubicOut, axis = 'y' } = {}) {\n\tconst style = getComputedStyle(node);\n\tconst opacity = +style.opacity;\n\tconst primary_property = axis === 'y' ? 'height' : 'width';\n\tconst primary_property_value = parseFloat(style[primary_property]);\n\tconst secondary_properties = axis === 'y' ? ['top', 'bottom'] : ['left', 'right'];\n\tconst capitalized_secondary_properties = secondary_properties.map(\n\t\t(e) => `${e[0].toUpperCase()}${e.slice(1)}`\n\t);\n\tconst padding_start_value = parseFloat(style[`padding${capitalized_secondary_properties[0]}`]);\n\tconst padding_end_value = parseFloat(style[`padding${capitalized_secondary_properties[1]}`]);\n\tconst margin_start_value = parseFloat(style[`margin${capitalized_secondary_properties[0]}`]);\n\tconst margin_end_value = parseFloat(style[`margin${capitalized_secondary_properties[1]}`]);\n\tconst border_width_start_value = parseFloat(\n\t\tstyle[`border${capitalized_secondary_properties[0]}Width`]\n\t);\n\tconst border_width_end_value = parseFloat(\n\t\tstyle[`border${capitalized_secondary_properties[1]}Width`]\n\t);\n\treturn {\n\t\tdelay,\n\t\tduration,\n\t\teasing,\n\t\tcss: (t) =>\n\t\t\t'overflow: hidden;' +\n\t\t\t`opacity: ${Math.min(t * 20, 1) * opacity};` +\n\t\t\t`${primary_property}: ${t * primary_property_value}px;` +\n\t\t\t`padding-${secondary_properties[0]}: ${t * padding_start_value}px;` +\n\t\t\t`padding-${secondary_properties[1]}: ${t * padding_end_value}px;` +\n\t\t\t`margin-${secondary_properties[0]}: ${t * margin_start_value}px;` +\n\t\t\t`margin-${secondary_properties[1]}: ${t * margin_end_value}px;` +\n\t\t\t`border-${secondary_properties[0]}-width: ${t * border_width_start_value}px;` +\n\t\t\t`border-${secondary_properties[1]}-width: ${t * border_width_end_value}px;`\n\t};\n}\n\n/**\n * Animates the opacity and scale of an element. `in` transitions animate from an element's current (default) values to the provided values, passed as parameters. `out` transitions animate from the provided values to an element's default values.\n *\n * https://svelte.dev/docs/svelte-transition#scale\n * @param {Element} node\n * @param {import('./public').ScaleParams} [params]\n * @returns {import('./public').TransitionConfig}\n */\nexport function scale(\n\tnode,\n\t{ delay = 0, duration = 400, easing = cubicOut, start = 0, opacity = 0 } = {}\n) {\n\tconst style = getComputedStyle(node);\n\tconst target_opacity = +style.opacity;\n\tconst transform = style.transform === 'none' ? '' : style.transform;\n\tconst sd = 1 - start;\n\tconst od = target_opacity * (1 - opacity);\n\treturn {\n\t\tdelay,\n\t\tduration,\n\t\teasing,\n\t\tcss: (_t, u) => `\n\t\t\ttransform: ${transform} scale(${1 - sd * u});\n\t\t\topacity: ${target_opacity - od * u}\n\t\t`\n\t};\n}\n\n/**\n * Animates the stroke of an SVG element, like a snake in a tube. `in` transitions begin with the path invisible and draw the path to the screen over time. `out` transitions start in a visible state and gradually erase the path. `draw` only works with elements that have a `getTotalLength` method, like `<path>` and `<polyline>`.\n *\n * https://svelte.dev/docs/svelte-transition#draw\n * @param {SVGElement & { getTotalLength(): number }} node\n * @param {import('./public').DrawParams} [params]\n * @returns {import('./public').TransitionConfig}\n */\nexport function draw(node, { delay = 0, speed, duration, easing = cubicInOut } = {}) {\n\tlet len = node.getTotalLength();\n\tconst style = getComputedStyle(node);\n\tif (style.strokeLinecap !== 'butt') {\n\t\tlen += parseInt(style.strokeWidth);\n\t}\n\tif (duration === undefined) {\n\t\tif (speed === undefined) {\n\t\t\tduration = 800;\n\t\t} else {\n\t\t\tduration = len / speed;\n\t\t}\n\t} else if (typeof duration === 'function') {\n\t\tduration = duration(len);\n\t}\n\treturn {\n\t\tdelay,\n\t\tduration,\n\t\teasing,\n\t\tcss: (_, u) => `\n\t\t\tstroke-dasharray: ${len};\n\t\t\tstroke-dashoffset: ${u * len};\n\t\t`\n\t};\n}\n\n/**\n * The `crossfade` function creates a pair of [transitions](https://svelte.dev/docs#template-syntax-element-directives-transition-fn) called `send` and `receive`. When an element is 'sent', it looks for a corresponding element being 'received', and generates a transition that transforms the element to its counterpart's position and fades it out. When an element is 'received', the reverse happens. If there is no counterpart, the `fallback` transition is used.\n *\n * https://svelte.dev/docs/svelte-transition#crossfade\n * @param {import('./public').CrossfadeParams & {\n * \tfallback?: (node: Element, params: import('./public').CrossfadeParams, intro: boolean) => import('./public').TransitionConfig;\n * }} params\n * @returns {[(node: any, params: import('./public').CrossfadeParams & { key: any; }) => () => import('./public').TransitionConfig, (node: any, params: import('./public').CrossfadeParams & { key: any; }) => () => import('./public').TransitionConfig]}\n */\nexport function crossfade({ fallback, ...defaults }) {\n\t/** @type {Map<any, Element>} */\n\tconst to_receive = new Map();\n\t/** @type {Map<any, Element>} */\n\tconst to_send = new Map();\n\t/**\n\t * @param {Element} from_node\n\t * @param {Element} node\n\t * @param {import('./public').CrossfadeParams} params\n\t * @returns {import('./public').TransitionConfig}\n\t */\n\tfunction crossfade(from_node, node, params) {\n\t\tconst {\n\t\t\tdelay = 0,\n\t\t\tduration = (d) => Math.sqrt(d) * 30,\n\t\t\teasing = cubicOut\n\t\t} = assign(assign({}, defaults), params);\n\t\tconst from = from_node.getBoundingClientRect();\n\t\tconst to = node.getBoundingClientRect();\n\t\tconst dx = from.left - to.left;\n\t\tconst dy = from.top - to.top;\n\t\tconst dw = from.width / to.width;\n\t\tconst dh = from.height / to.height;\n\t\tconst d = Math.sqrt(dx * dx + dy * dy);\n\t\tconst style = getComputedStyle(node);\n\t\tconst transform = style.transform === 'none' ? '' : style.transform;\n\t\tconst opacity = +style.opacity;\n\t\treturn {\n\t\t\tdelay,\n\t\t\tduration: is_function(duration) ? duration(d) : duration,\n\t\t\teasing,\n\t\t\tcss: (t, u) => `\n\t\t\t\topacity: ${t * opacity};\n\t\t\t\ttransform-origin: top left;\n\t\t\t\ttransform: ${transform} translate(${u * dx}px,${u * dy}px) scale(${t + (1 - t) * dw}, ${\n\t\t\t\tt + (1 - t) * dh\n\t\t\t});\n\t\t\t`\n\t\t};\n\t}\n\n\t/**\n\t * @param {Map<any, Element>} items\n\t * @param {Map<any, Element>} counterparts\n\t * @param {boolean} intro\n\t * @returns {(node: any, params: import('./public').CrossfadeParams & { key: any; }) => () => import('./public').TransitionConfig}\n\t */\n\tfunction transition(items, counterparts, intro) {\n\t\treturn (node, params) => {\n\t\t\titems.set(params.key, node);\n\t\t\treturn () => {\n\t\t\t\tif (counterparts.has(params.key)) {\n\t\t\t\t\tconst other_node = counterparts.get(params.key);\n\t\t\t\t\tcounterparts.delete(params.key);\n\t\t\t\t\treturn crossfade(other_node, node, params);\n\t\t\t\t}\n\t\t\t\t// if the node is disappearing altogether\n\t\t\t\t// (i.e. wasn't claimed by the other list)\n\t\t\t\t// then we need to supply an outro\n\t\t\t\titems.delete(params.key);\n\t\t\t\treturn fallback && fallback(node, params, intro);\n\t\t\t};\n\t\t};\n\t}\n\treturn [transition(to_send, to_receive, false), transition(to_receive, to_send, true)];\n}\n","import { PUBLIC_VERSION } from '../../../shared/version.js';\n\nif (typeof window !== 'undefined')\n\t// @ts-ignore\n\t(window.__svelte || (window.__svelte = { v: new Set() })).v.add(PUBLIC_VERSION);\n","// generated during release, do not modify\n\n/**\n * The current version, as set in package.json.\n *\n * https://svelte.dev/docs/svelte-compiler#svelte-version\n * @type {string}\n */\nexport const VERSION = '4.2.19';\nexport const PUBLIC_VERSION = '4';\n","// canvas-confetti v1.9.3 built on 2024-04-30T22:19:17.794Z\nvar module = {};\n\n// source content\n/* globals Map */\n\n(function main(global, module, isWorker, workerSize) {\n  var canUseWorker = !!(\n    global.Worker &&\n    global.Blob &&\n    global.Promise &&\n    global.OffscreenCanvas &&\n    global.OffscreenCanvasRenderingContext2D &&\n    global.HTMLCanvasElement &&\n    global.HTMLCanvasElement.prototype.transferControlToOffscreen &&\n    global.URL &&\n    global.URL.createObjectURL);\n\n  var canUsePaths = typeof Path2D === 'function' && typeof DOMMatrix === 'function';\n  var canDrawBitmap = (function () {\n    // this mostly supports ssr\n    if (!global.OffscreenCanvas) {\n      return false;\n    }\n\n    var canvas = new OffscreenCanvas(1, 1);\n    var ctx = canvas.getContext('2d');\n    ctx.fillRect(0, 0, 1, 1);\n    var bitmap = canvas.transferToImageBitmap();\n\n    try {\n      ctx.createPattern(bitmap, 'no-repeat');\n    } catch (e) {\n      return false;\n    }\n\n    return true;\n  })();\n\n  function noop() {}\n\n  // create a promise if it exists, otherwise, just\n  // call the function directly\n  function promise(func) {\n    var ModulePromise = module.exports.Promise;\n    var Prom = ModulePromise !== void 0 ? ModulePromise : global.Promise;\n\n    if (typeof Prom === 'function') {\n      return new Prom(func);\n    }\n\n    func(noop, noop);\n\n    return null;\n  }\n\n  var bitmapMapper = (function (skipTransform, map) {\n    // see https://github.com/catdad/canvas-confetti/issues/209\n    // creating canvases is actually pretty expensive, so we should create a\n    // 1:1 map for bitmap:canvas, so that we can animate the confetti in\n    // a performant manner, but also not store them forever so that we don't\n    // have a memory leak\n    return {\n      transform: function(bitmap) {\n        if (skipTransform) {\n          return bitmap;\n        }\n\n        if (map.has(bitmap)) {\n          return map.get(bitmap);\n        }\n\n        var canvas = new OffscreenCanvas(bitmap.width, bitmap.height);\n        var ctx = canvas.getContext('2d');\n        ctx.drawImage(bitmap, 0, 0);\n\n        map.set(bitmap, canvas);\n\n        return canvas;\n      },\n      clear: function () {\n        map.clear();\n      }\n    };\n  })(canDrawBitmap, new Map());\n\n  var raf = (function () {\n    var TIME = Math.floor(1000 / 60);\n    var frame, cancel;\n    var frames = {};\n    var lastFrameTime = 0;\n\n    if (typeof requestAnimationFrame === 'function' && typeof cancelAnimationFrame === 'function') {\n      frame = function (cb) {\n        var id = Math.random();\n\n        frames[id] = requestAnimationFrame(function onFrame(time) {\n          if (lastFrameTime === time || lastFrameTime + TIME - 1 < time) {\n            lastFrameTime = time;\n            delete frames[id];\n\n            cb();\n          } else {\n            frames[id] = requestAnimationFrame(onFrame);\n          }\n        });\n\n        return id;\n      };\n      cancel = function (id) {\n        if (frames[id]) {\n          cancelAnimationFrame(frames[id]);\n        }\n      };\n    } else {\n      frame = function (cb) {\n        return setTimeout(cb, TIME);\n      };\n      cancel = function (timer) {\n        return clearTimeout(timer);\n      };\n    }\n\n    return { frame: frame, cancel: cancel };\n  }());\n\n  var getWorker = (function () {\n    var worker;\n    var prom;\n    var resolves = {};\n\n    function decorate(worker) {\n      function execute(options, callback) {\n        worker.postMessage({ options: options || {}, callback: callback });\n      }\n      worker.init = function initWorker(canvas) {\n        var offscreen = canvas.transferControlToOffscreen();\n        worker.postMessage({ canvas: offscreen }, [offscreen]);\n      };\n\n      worker.fire = function fireWorker(options, size, done) {\n        if (prom) {\n          execute(options, null);\n          return prom;\n        }\n\n        var id = Math.random().toString(36).slice(2);\n\n        prom = promise(function (resolve) {\n          function workerDone(msg) {\n            if (msg.data.callback !== id) {\n              return;\n            }\n\n            delete resolves[id];\n            worker.removeEventListener('message', workerDone);\n\n            prom = null;\n\n            bitmapMapper.clear();\n\n            done();\n            resolve();\n          }\n\n          worker.addEventListener('message', workerDone);\n          execute(options, id);\n\n          resolves[id] = workerDone.bind(null, { data: { callback: id }});\n        });\n\n        return prom;\n      };\n\n      worker.reset = function resetWorker() {\n        worker.postMessage({ reset: true });\n\n        for (var id in resolves) {\n          resolves[id]();\n          delete resolves[id];\n        }\n      };\n    }\n\n    return function () {\n      if (worker) {\n        return worker;\n      }\n\n      if (!isWorker && canUseWorker) {\n        var code = [\n          'var CONFETTI, SIZE = {}, module = {};',\n          '(' + main.toString() + ')(this, module, true, SIZE);',\n          'onmessage = function(msg) {',\n          '  if (msg.data.options) {',\n          '    CONFETTI(msg.data.options).then(function () {',\n          '      if (msg.data.callback) {',\n          '        postMessage({ callback: msg.data.callback });',\n          '      }',\n          '    });',\n          '  } else if (msg.data.reset) {',\n          '    CONFETTI && CONFETTI.reset();',\n          '  } else if (msg.data.resize) {',\n          '    SIZE.width = msg.data.resize.width;',\n          '    SIZE.height = msg.data.resize.height;',\n          '  } else if (msg.data.canvas) {',\n          '    SIZE.width = msg.data.canvas.width;',\n          '    SIZE.height = msg.data.canvas.height;',\n          '    CONFETTI = module.exports.create(msg.data.canvas);',\n          '  }',\n          '}',\n        ].join('\\n');\n        try {\n          worker = new Worker(URL.createObjectURL(new Blob([code])));\n        } catch (e) {\n          // eslint-disable-next-line no-console\n          typeof console !== undefined && typeof console.warn === 'function' ? console.warn('🎊 Could not load worker', e) : null;\n\n          return null;\n        }\n\n        decorate(worker);\n      }\n\n      return worker;\n    };\n  })();\n\n  var defaults = {\n    particleCount: 50,\n    angle: 90,\n    spread: 45,\n    startVelocity: 45,\n    decay: 0.9,\n    gravity: 1,\n    drift: 0,\n    ticks: 200,\n    x: 0.5,\n    y: 0.5,\n    shapes: ['square', 'circle'],\n    zIndex: 100,\n    colors: [\n      '#26ccff',\n      '#a25afd',\n      '#ff5e7e',\n      '#88ff5a',\n      '#fcff42',\n      '#ffa62d',\n      '#ff36ff'\n    ],\n    // probably should be true, but back-compat\n    disableForReducedMotion: false,\n    scalar: 1\n  };\n\n  function convert(val, transform) {\n    return transform ? transform(val) : val;\n  }\n\n  function isOk(val) {\n    return !(val === null || val === undefined);\n  }\n\n  function prop(options, name, transform) {\n    return convert(\n      options && isOk(options[name]) ? options[name] : defaults[name],\n      transform\n    );\n  }\n\n  function onlyPositiveInt(number){\n    return number < 0 ? 0 : Math.floor(number);\n  }\n\n  function randomInt(min, max) {\n    // [min, max)\n    return Math.floor(Math.random() * (max - min)) + min;\n  }\n\n  function toDecimal(str) {\n    return parseInt(str, 16);\n  }\n\n  function colorsToRgb(colors) {\n    return colors.map(hexToRgb);\n  }\n\n  function hexToRgb(str) {\n    var val = String(str).replace(/[^0-9a-f]/gi, '');\n\n    if (val.length < 6) {\n        val = val[0]+val[0]+val[1]+val[1]+val[2]+val[2];\n    }\n\n    return {\n      r: toDecimal(val.substring(0,2)),\n      g: toDecimal(val.substring(2,4)),\n      b: toDecimal(val.substring(4,6))\n    };\n  }\n\n  function getOrigin(options) {\n    var origin = prop(options, 'origin', Object);\n    origin.x = prop(origin, 'x', Number);\n    origin.y = prop(origin, 'y', Number);\n\n    return origin;\n  }\n\n  function setCanvasWindowSize(canvas) {\n    canvas.width = document.documentElement.clientWidth;\n    canvas.height = document.documentElement.clientHeight;\n  }\n\n  function setCanvasRectSize(canvas) {\n    var rect = canvas.getBoundingClientRect();\n    canvas.width = rect.width;\n    canvas.height = rect.height;\n  }\n\n  function getCanvas(zIndex) {\n    var canvas = document.createElement('canvas');\n\n    canvas.style.position = 'fixed';\n    canvas.style.top = '0px';\n    canvas.style.left = '0px';\n    canvas.style.pointerEvents = 'none';\n    canvas.style.zIndex = zIndex;\n\n    return canvas;\n  }\n\n  function ellipse(context, x, y, radiusX, radiusY, rotation, startAngle, endAngle, antiClockwise) {\n    context.save();\n    context.translate(x, y);\n    context.rotate(rotation);\n    context.scale(radiusX, radiusY);\n    context.arc(0, 0, 1, startAngle, endAngle, antiClockwise);\n    context.restore();\n  }\n\n  function randomPhysics(opts) {\n    var radAngle = opts.angle * (Math.PI / 180);\n    var radSpread = opts.spread * (Math.PI / 180);\n\n    return {\n      x: opts.x,\n      y: opts.y,\n      wobble: Math.random() * 10,\n      wobbleSpeed: Math.min(0.11, Math.random() * 0.1 + 0.05),\n      velocity: (opts.startVelocity * 0.5) + (Math.random() * opts.startVelocity),\n      angle2D: -radAngle + ((0.5 * radSpread) - (Math.random() * radSpread)),\n      tiltAngle: (Math.random() * (0.75 - 0.25) + 0.25) * Math.PI,\n      color: opts.color,\n      shape: opts.shape,\n      tick: 0,\n      totalTicks: opts.ticks,\n      decay: opts.decay,\n      drift: opts.drift,\n      random: Math.random() + 2,\n      tiltSin: 0,\n      tiltCos: 0,\n      wobbleX: 0,\n      wobbleY: 0,\n      gravity: opts.gravity * 3,\n      ovalScalar: 0.6,\n      scalar: opts.scalar,\n      flat: opts.flat\n    };\n  }\n\n  function updateFetti(context, fetti) {\n    fetti.x += Math.cos(fetti.angle2D) * fetti.velocity + fetti.drift;\n    fetti.y += Math.sin(fetti.angle2D) * fetti.velocity + fetti.gravity;\n    fetti.velocity *= fetti.decay;\n\n    if (fetti.flat) {\n      fetti.wobble = 0;\n      fetti.wobbleX = fetti.x + (10 * fetti.scalar);\n      fetti.wobbleY = fetti.y + (10 * fetti.scalar);\n\n      fetti.tiltSin = 0;\n      fetti.tiltCos = 0;\n      fetti.random = 1;\n    } else {\n      fetti.wobble += fetti.wobbleSpeed;\n      fetti.wobbleX = fetti.x + ((10 * fetti.scalar) * Math.cos(fetti.wobble));\n      fetti.wobbleY = fetti.y + ((10 * fetti.scalar) * Math.sin(fetti.wobble));\n\n      fetti.tiltAngle += 0.1;\n      fetti.tiltSin = Math.sin(fetti.tiltAngle);\n      fetti.tiltCos = Math.cos(fetti.tiltAngle);\n      fetti.random = Math.random() + 2;\n    }\n\n    var progress = (fetti.tick++) / fetti.totalTicks;\n\n    var x1 = fetti.x + (fetti.random * fetti.tiltCos);\n    var y1 = fetti.y + (fetti.random * fetti.tiltSin);\n    var x2 = fetti.wobbleX + (fetti.random * fetti.tiltCos);\n    var y2 = fetti.wobbleY + (fetti.random * fetti.tiltSin);\n\n    context.fillStyle = 'rgba(' + fetti.color.r + ', ' + fetti.color.g + ', ' + fetti.color.b + ', ' + (1 - progress) + ')';\n\n    context.beginPath();\n\n    if (canUsePaths && fetti.shape.type === 'path' && typeof fetti.shape.path === 'string' && Array.isArray(fetti.shape.matrix)) {\n      context.fill(transformPath2D(\n        fetti.shape.path,\n        fetti.shape.matrix,\n        fetti.x,\n        fetti.y,\n        Math.abs(x2 - x1) * 0.1,\n        Math.abs(y2 - y1) * 0.1,\n        Math.PI / 10 * fetti.wobble\n      ));\n    } else if (fetti.shape.type === 'bitmap') {\n      var rotation = Math.PI / 10 * fetti.wobble;\n      var scaleX = Math.abs(x2 - x1) * 0.1;\n      var scaleY = Math.abs(y2 - y1) * 0.1;\n      var width = fetti.shape.bitmap.width * fetti.scalar;\n      var height = fetti.shape.bitmap.height * fetti.scalar;\n\n      var matrix = new DOMMatrix([\n        Math.cos(rotation) * scaleX,\n        Math.sin(rotation) * scaleX,\n        -Math.sin(rotation) * scaleY,\n        Math.cos(rotation) * scaleY,\n        fetti.x,\n        fetti.y\n      ]);\n\n      // apply the transform matrix from the confetti shape\n      matrix.multiplySelf(new DOMMatrix(fetti.shape.matrix));\n\n      var pattern = context.createPattern(bitmapMapper.transform(fetti.shape.bitmap), 'no-repeat');\n      pattern.setTransform(matrix);\n\n      context.globalAlpha = (1 - progress);\n      context.fillStyle = pattern;\n      context.fillRect(\n        fetti.x - (width / 2),\n        fetti.y - (height / 2),\n        width,\n        height\n      );\n      context.globalAlpha = 1;\n    } else if (fetti.shape === 'circle') {\n      context.ellipse ?\n        context.ellipse(fetti.x, fetti.y, Math.abs(x2 - x1) * fetti.ovalScalar, Math.abs(y2 - y1) * fetti.ovalScalar, Math.PI / 10 * fetti.wobble, 0, 2 * Math.PI) :\n        ellipse(context, fetti.x, fetti.y, Math.abs(x2 - x1) * fetti.ovalScalar, Math.abs(y2 - y1) * fetti.ovalScalar, Math.PI / 10 * fetti.wobble, 0, 2 * Math.PI);\n    } else if (fetti.shape === 'star') {\n      var rot = Math.PI / 2 * 3;\n      var innerRadius = 4 * fetti.scalar;\n      var outerRadius = 8 * fetti.scalar;\n      var x = fetti.x;\n      var y = fetti.y;\n      var spikes = 5;\n      var step = Math.PI / spikes;\n\n      while (spikes--) {\n        x = fetti.x + Math.cos(rot) * outerRadius;\n        y = fetti.y + Math.sin(rot) * outerRadius;\n        context.lineTo(x, y);\n        rot += step;\n\n        x = fetti.x + Math.cos(rot) * innerRadius;\n        y = fetti.y + Math.sin(rot) * innerRadius;\n        context.lineTo(x, y);\n        rot += step;\n      }\n    } else {\n      context.moveTo(Math.floor(fetti.x), Math.floor(fetti.y));\n      context.lineTo(Math.floor(fetti.wobbleX), Math.floor(y1));\n      context.lineTo(Math.floor(x2), Math.floor(y2));\n      context.lineTo(Math.floor(x1), Math.floor(fetti.wobbleY));\n    }\n\n    context.closePath();\n    context.fill();\n\n    return fetti.tick < fetti.totalTicks;\n  }\n\n  function animate(canvas, fettis, resizer, size, done) {\n    var animatingFettis = fettis.slice();\n    var context = canvas.getContext('2d');\n    var animationFrame;\n    var destroy;\n\n    var prom = promise(function (resolve) {\n      function onDone() {\n        animationFrame = destroy = null;\n\n        context.clearRect(0, 0, size.width, size.height);\n        bitmapMapper.clear();\n\n        done();\n        resolve();\n      }\n\n      function update() {\n        if (isWorker && !(size.width === workerSize.width && size.height === workerSize.height)) {\n          size.width = canvas.width = workerSize.width;\n          size.height = canvas.height = workerSize.height;\n        }\n\n        if (!size.width && !size.height) {\n          resizer(canvas);\n          size.width = canvas.width;\n          size.height = canvas.height;\n        }\n\n        context.clearRect(0, 0, size.width, size.height);\n\n        animatingFettis = animatingFettis.filter(function (fetti) {\n          return updateFetti(context, fetti);\n        });\n\n        if (animatingFettis.length) {\n          animationFrame = raf.frame(update);\n        } else {\n          onDone();\n        }\n      }\n\n      animationFrame = raf.frame(update);\n      destroy = onDone;\n    });\n\n    return {\n      addFettis: function (fettis) {\n        animatingFettis = animatingFettis.concat(fettis);\n\n        return prom;\n      },\n      canvas: canvas,\n      promise: prom,\n      reset: function () {\n        if (animationFrame) {\n          raf.cancel(animationFrame);\n        }\n\n        if (destroy) {\n          destroy();\n        }\n      }\n    };\n  }\n\n  function confettiCannon(canvas, globalOpts) {\n    var isLibCanvas = !canvas;\n    var allowResize = !!prop(globalOpts || {}, 'resize');\n    var hasResizeEventRegistered = false;\n    var globalDisableForReducedMotion = prop(globalOpts, 'disableForReducedMotion', Boolean);\n    var shouldUseWorker = canUseWorker && !!prop(globalOpts || {}, 'useWorker');\n    var worker = shouldUseWorker ? getWorker() : null;\n    var resizer = isLibCanvas ? setCanvasWindowSize : setCanvasRectSize;\n    var initialized = (canvas && worker) ? !!canvas.__confetti_initialized : false;\n    var preferLessMotion = typeof matchMedia === 'function' && matchMedia('(prefers-reduced-motion)').matches;\n    var animationObj;\n\n    function fireLocal(options, size, done) {\n      var particleCount = prop(options, 'particleCount', onlyPositiveInt);\n      var angle = prop(options, 'angle', Number);\n      var spread = prop(options, 'spread', Number);\n      var startVelocity = prop(options, 'startVelocity', Number);\n      var decay = prop(options, 'decay', Number);\n      var gravity = prop(options, 'gravity', Number);\n      var drift = prop(options, 'drift', Number);\n      var colors = prop(options, 'colors', colorsToRgb);\n      var ticks = prop(options, 'ticks', Number);\n      var shapes = prop(options, 'shapes');\n      var scalar = prop(options, 'scalar');\n      var flat = !!prop(options, 'flat');\n      var origin = getOrigin(options);\n\n      var temp = particleCount;\n      var fettis = [];\n\n      var startX = canvas.width * origin.x;\n      var startY = canvas.height * origin.y;\n\n      while (temp--) {\n        fettis.push(\n          randomPhysics({\n            x: startX,\n            y: startY,\n            angle: angle,\n            spread: spread,\n            startVelocity: startVelocity,\n            color: colors[temp % colors.length],\n            shape: shapes[randomInt(0, shapes.length)],\n            ticks: ticks,\n            decay: decay,\n            gravity: gravity,\n            drift: drift,\n            scalar: scalar,\n            flat: flat\n          })\n        );\n      }\n\n      // if we have a previous canvas already animating,\n      // add to it\n      if (animationObj) {\n        return animationObj.addFettis(fettis);\n      }\n\n      animationObj = animate(canvas, fettis, resizer, size , done);\n\n      return animationObj.promise;\n    }\n\n    function fire(options) {\n      var disableForReducedMotion = globalDisableForReducedMotion || prop(options, 'disableForReducedMotion', Boolean);\n      var zIndex = prop(options, 'zIndex', Number);\n\n      if (disableForReducedMotion && preferLessMotion) {\n        return promise(function (resolve) {\n          resolve();\n        });\n      }\n\n      if (isLibCanvas && animationObj) {\n        // use existing canvas from in-progress animation\n        canvas = animationObj.canvas;\n      } else if (isLibCanvas && !canvas) {\n        // create and initialize a new canvas\n        canvas = getCanvas(zIndex);\n        document.body.appendChild(canvas);\n      }\n\n      if (allowResize && !initialized) {\n        // initialize the size of a user-supplied canvas\n        resizer(canvas);\n      }\n\n      var size = {\n        width: canvas.width,\n        height: canvas.height\n      };\n\n      if (worker && !initialized) {\n        worker.init(canvas);\n      }\n\n      initialized = true;\n\n      if (worker) {\n        canvas.__confetti_initialized = true;\n      }\n\n      function onResize() {\n        if (worker) {\n          // TODO this really shouldn't be immediate, because it is expensive\n          var obj = {\n            getBoundingClientRect: function () {\n              if (!isLibCanvas) {\n                return canvas.getBoundingClientRect();\n              }\n            }\n          };\n\n          resizer(obj);\n\n          worker.postMessage({\n            resize: {\n              width: obj.width,\n              height: obj.height\n            }\n          });\n          return;\n        }\n\n        // don't actually query the size here, since this\n        // can execute frequently and rapidly\n        size.width = size.height = null;\n      }\n\n      function done() {\n        animationObj = null;\n\n        if (allowResize) {\n          hasResizeEventRegistered = false;\n          global.removeEventListener('resize', onResize);\n        }\n\n        if (isLibCanvas && canvas) {\n          if (document.body.contains(canvas)) {\n            document.body.removeChild(canvas); \n          }\n          canvas = null;\n          initialized = false;\n        }\n      }\n\n      if (allowResize && !hasResizeEventRegistered) {\n        hasResizeEventRegistered = true;\n        global.addEventListener('resize', onResize, false);\n      }\n\n      if (worker) {\n        return worker.fire(options, size, done);\n      }\n\n      return fireLocal(options, size, done);\n    }\n\n    fire.reset = function () {\n      if (worker) {\n        worker.reset();\n      }\n\n      if (animationObj) {\n        animationObj.reset();\n      }\n    };\n\n    return fire;\n  }\n\n  // Make default export lazy to defer worker creation until called.\n  var defaultFire;\n  function getDefaultFire() {\n    if (!defaultFire) {\n      defaultFire = confettiCannon(null, { useWorker: true, resize: true });\n    }\n    return defaultFire;\n  }\n\n  function transformPath2D(pathString, pathMatrix, x, y, scaleX, scaleY, rotation) {\n    var path2d = new Path2D(pathString);\n\n    var t1 = new Path2D();\n    t1.addPath(path2d, new DOMMatrix(pathMatrix));\n\n    var t2 = new Path2D();\n    // see https://developer.mozilla.org/en-US/docs/Web/API/DOMMatrix/DOMMatrix\n    t2.addPath(t1, new DOMMatrix([\n      Math.cos(rotation) * scaleX,\n      Math.sin(rotation) * scaleX,\n      -Math.sin(rotation) * scaleY,\n      Math.cos(rotation) * scaleY,\n      x,\n      y\n    ]));\n\n    return t2;\n  }\n\n  function shapeFromPath(pathData) {\n    if (!canUsePaths) {\n      throw new Error('path confetti are not supported in this browser');\n    }\n\n    var path, matrix;\n\n    if (typeof pathData === 'string') {\n      path = pathData;\n    } else {\n      path = pathData.path;\n      matrix = pathData.matrix;\n    }\n\n    var path2d = new Path2D(path);\n    var tempCanvas = document.createElement('canvas');\n    var tempCtx = tempCanvas.getContext('2d');\n\n    if (!matrix) {\n      // attempt to figure out the width of the path, up to 1000x1000\n      var maxSize = 1000;\n      var minX = maxSize;\n      var minY = maxSize;\n      var maxX = 0;\n      var maxY = 0;\n      var width, height;\n\n      // do some line skipping... this is faster than checking\n      // every pixel and will be mostly still correct\n      for (var x = 0; x < maxSize; x += 2) {\n        for (var y = 0; y < maxSize; y += 2) {\n          if (tempCtx.isPointInPath(path2d, x, y, 'nonzero')) {\n            minX = Math.min(minX, x);\n            minY = Math.min(minY, y);\n            maxX = Math.max(maxX, x);\n            maxY = Math.max(maxY, y);\n          }\n        }\n      }\n\n      width = maxX - minX;\n      height = maxY - minY;\n\n      var maxDesiredSize = 10;\n      var scale = Math.min(maxDesiredSize/width, maxDesiredSize/height);\n\n      matrix = [\n        scale, 0, 0, scale,\n        -Math.round((width/2) + minX) * scale,\n        -Math.round((height/2) + minY) * scale\n      ];\n    }\n\n    return {\n      type: 'path',\n      path: path,\n      matrix: matrix\n    };\n  }\n\n  function shapeFromText(textData) {\n    var text,\n        scalar = 1,\n        color = '#000000',\n        // see https://nolanlawson.com/2022/04/08/the-struggle-of-using-native-emoji-on-the-web/\n        fontFamily = '\"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\", \"Noto Color Emoji\", \"EmojiOne Color\", \"Android Emoji\", \"Twemoji Mozilla\", \"system emoji\", sans-serif';\n\n    if (typeof textData === 'string') {\n      text = textData;\n    } else {\n      text = textData.text;\n      scalar = 'scalar' in textData ? textData.scalar : scalar;\n      fontFamily = 'fontFamily' in textData ? textData.fontFamily : fontFamily;\n      color = 'color' in textData ? textData.color : color;\n    }\n\n    // all other confetti are 10 pixels,\n    // so this pixel size is the de-facto 100% scale confetti\n    var fontSize = 10 * scalar;\n    var font = '' + fontSize + 'px ' + fontFamily;\n\n    var canvas = new OffscreenCanvas(fontSize, fontSize);\n    var ctx = canvas.getContext('2d');\n\n    ctx.font = font;\n    var size = ctx.measureText(text);\n    var width = Math.ceil(size.actualBoundingBoxRight + size.actualBoundingBoxLeft);\n    var height = Math.ceil(size.actualBoundingBoxAscent + size.actualBoundingBoxDescent);\n\n    var padding = 2;\n    var x = size.actualBoundingBoxLeft + padding;\n    var y = size.actualBoundingBoxAscent + padding;\n    width += padding + padding;\n    height += padding + padding;\n\n    canvas = new OffscreenCanvas(width, height);\n    ctx = canvas.getContext('2d');\n    ctx.font = font;\n    ctx.fillStyle = color;\n\n    ctx.fillText(text, x, y);\n\n    var scale = 1 / scalar;\n\n    return {\n      type: 'bitmap',\n      // TODO these probably need to be transfered for workers\n      bitmap: canvas.transferToImageBitmap(),\n      matrix: [scale, 0, 0, scale, -width * scale / 2, -height * scale / 2]\n    };\n  }\n\n  module.exports = function() {\n    return getDefaultFire().apply(this, arguments);\n  };\n  module.exports.reset = function() {\n    getDefaultFire().reset();\n  };\n  module.exports.create = confettiCannon;\n  module.exports.shapeFromPath = shapeFromPath;\n  module.exports.shapeFromText = shapeFromText;\n}((function () {\n  if (typeof window !== 'undefined') {\n    return window;\n  }\n\n  if (typeof self !== 'undefined') {\n    return self;\n  }\n\n  return this || {};\n})(), module, false));\n\n// end source content\n\nexport default module.exports;\nexport var create = module.exports.create;\n","<script>\n  import { fade } from 'svelte/transition';\n  import confetti from \"canvas-confetti\";\n\n  let questions = [\n  {\n    question: \"Who is this Cutie?\",\n    picture: \"/game/images/Ariane.jpeg\", // Updated path\n    options: [\"Lauren Watson\", \"Anna Oakes\", \"Laura Kukkonen\", \"Yixiao Ren\", \"Carla Mandiola\", \"Natalia Belizario\", \"Ariane Luthi\"],\n    answer: \"Ariane Luthi\",\n  },\n  {\n    question: \"Who is this Auntie?\",\n    picture: \"/images/Lauren.png\", // Updated path\n    options: [\"Laura Kukkonen\", \"Carla Mandiola\", \"Ariane Luthi\", \"Yixiao Ren\", \"Anna Oakes\", \"Lauren Watson\", \"Natalia Belizario\"],\n    answer: \"Lauren Watson\",\n  },\n  {\n    question: \"Can you guess who she is?\",\n    picture: \"images/Natalia.png\", // Updated path\n    options: [\"Yixiao Ren\", \"Natalia Belizario\", \"Ariane Luthi\", \"Anna Oakes\", \"Laura Kukkonen\", \"Carla Mandiola\", \"Lauren Watson\"],\n    answer: \"Natalia Belizario\",\n  },\n  {\n    question: \"You have seen this face before\",\n    picture: \"images/Carla.png\", // Updated path\n    options: [\"Carla Mandiola\", \"Yixiao Ren\", \"Anna Oakes\", \"Lauren Watson\", \"Natalia Belizario\", \"Laura Kukkonen\", \"Ariane Luthi\"],\n    answer: \"Carla Mandiola\",\n  },\n  {\n    question: \"Oh, who is she?\",\n    picture: \"images/Yixiao.png\", // Updated path\n    options: [\"Natalia Belizario\", \"Lauren Watson\", \"Ariane Luthi\", \"Yixiao Ren\", \"Anna Oakes\", \"Carla Mandiola\", \"Laura Kukkonen\"],\n    answer: \"Yixiao Ren\",\n  },\n  {\n    question: \"Who is this little kid?\",\n    picture: \"images/Laura.png\", // Updated path\n    options: [\"Ariane Luthi\", \"Yixiao Ren\", \"Anna Oakes\", \"Carla Mandiola\", \"Laura Kukkonen\", \"Natalia Belizario\", \"Lauren Watson\"],\n    answer: \"Laura Kukkonen\",\n  },\n  {\n    question: \"Same energy, who is she?\",\n    picture: \"images/Anna.jpg\", // Updated path\n    options: [\"Yixiao Ren\", \"Laura Kukkonen\", \"Natalia Belizario\", \"Lauren Watson\", \"Ariane Luthi\", \"Anna Oakes\", \"Carla Mandiola\"],\n    answer: \"Anna Oakes\",\n  },\n];\n\n\n  let currentQuestionIndex = 0;\n  let score = 0;\n  let selectedOption = null;\n  let showResult = false;\n  let resultsReady = false;\n\n  function selectAnswer(option) {\n    selectedOption = selectedOption === option ? null : option;\n  }\n\n  function nextQuestion() {\n    if (selectedOption === questions[currentQuestionIndex].answer) {\n      score++;\n    }\n\n    if (currentQuestionIndex < questions.length - 1) {\n      currentQuestionIndex++;\n      selectedOption = null;\n    } else {\n      showResult = true;\n      setTimeout(() => {\n        resultsReady = true;\n        if (score === questions.length) {\n          celebratePerfectScore();\n        } else {\n          celebrate();\n        }\n      }, 500);\n    }\n  }\n\n  function restartGame() {\n    currentQuestionIndex = 0;\n    score = 0;\n    selectedOption = null;\n    showResult = false;\n    resultsReady = false;\n  }\n\n  function celebrate() {\n    confetti({ particleCount: 100, spread: 70, origin: { y: 0.6 } });\n  }\n\n  function celebratePerfectScore() {\n    confetti({\n      particleCount: 200,\n      spread: 100,\n      origin: { y: 0.4 },\n      colors: [\"#ffd700\", \"#e5e4e2\"],\n    });\n  }\n</script>\n\n<main>\n  <h1>Guess the Auntie Game!</h1>\n\n  {#if resultsReady}\n    <div transition:fade>\n      <p>You got {score} out of {questions.length} correct!</p>\n      <button on:click={restartGame}>Play Again</button>\n    </div>\n  {:else if showResult}\n    <div transition:fade></div>\n  {:else}\n    <div transition:fade>\n      <p>{questions[currentQuestionIndex].question}</p>\n      {#if questions[currentQuestionIndex].picture}\n        <img src={questions[currentQuestionIndex].picture} alt=\"Person to guess\" />\n      {:else}\n        <p>(No image available)</p>\n      {/if}\n      <div>\n        {#each questions[currentQuestionIndex].options as option}\n          <button\n            on:click={() => selectAnswer(option)}\n            class:selected={selectedOption === option}\n          >\n            {option}\n          </button>\n        {/each}\n      </div>\n      {#if selectedOption}\n        <button class=\"next-button\" on:click={nextQuestion}>Next</button>\n      {/if}\n    </div>\n  {/if}\n</main>\n\n<style>\n  :global(body) {\n    margin: 0;\n    font-family: Arial, sans-serif;\n    background-color: #f0f0f0;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    min-height: 100vh;\n  }\n\n  main {\n    text-align: center;\n    max-width: 600px;\n    margin: 0 auto;\n    padding: 20px;\n    background: rgba(255, 255, 255, 0.8);\n    border-radius: 15px;\n    box-shadow: 0 8px 16px rgba(0, 0, 0, 0.2);\n  }\n\n  img {\n    max-width: 80%;\n    max-height: 400px;\n    height: auto;\n    margin-bottom: 20px;\n    border-radius: 10px;\n    border: 10px solid white;\n    box-shadow: 0 8px 16px rgba(0, 0, 0, 0.2);\n  }\n\n  button {\n    margin: 8px;\n    padding: 12px 16px;\n    font-size: 16px;\n    cursor: pointer;\n    border: none;\n    background: #ff6f61;\n    color: white;\n    border-radius: 25px;\n    transition: all 0.3s;\n    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.2);\n  }\n\n  button:hover {\n    background: #ff3b2f;\n    transform: translateY(-1px);\n  }\n\n  button.selected {\n    background-color: #9C0D38;\n    color: white;\n  }\n\n  button.next-button {\n    margin: 12px;\n    padding: 14px 20px;\n    font-size: 18px;\n    font-weight: bold;\n    background: #F3A712;\n    border-radius: 30px;\n    transition: all 0.3s ease;\n  }\n\n  button.next-button:hover {\n    background: #F3A712;\n    transform: translateY(-2px);\n  }\n\n  button:disabled {\n    background-color: #ccc;\n    cursor: not-allowed;\n  }\n</style>\n","import App from './App.svelte';\n\nconst app = new App({\n  target: document.body,\n});\n\nexport default app;"],"names":["noop","identity","x","run","fn","blank_object","Object","create","run_all","fns","forEach","is_function","thing","safe_not_equal","a","b","src_url_equal_anchor","src_url_equal","element_src","url","document","createElement","href","is_client","window","now","performance","Date","raf","cb","requestAnimationFrame","tasks","Set","run_tasks","task","c","delete","f","size","append","target","node","appendChild","get_root_for_style","root","getRootNode","ownerDocument","host","append_empty_stylesheet","style_element","element","textContent","style","head","sheet","append_stylesheet","insert","anchor","insertBefore","detach","parentNode","removeChild","name","text","data","createTextNode","space","listen","event","handler","options","addEventListener","removeEventListener","attr","attribute","value","removeAttribute","getAttribute","setAttribute","set_data","toggle_class","toggle","classList","managed_styles","Map","current_component","active","create_rule","duration","delay","ease","uid","step","keyframes","p","t","rule","str","hash","i","length","charCodeAt","doc","stylesheet","rules","get","info","set","create_style_information","insertRule","cssRules","animation","delete_rule","previous","split","next","filter","anim","indexOf","deleted","join","ownerNode","clear","set_current_component","component","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","Promise","resolve","update_scheduled","add_render_callback","push","seen_callbacks","promise","flushidx","flush","saved_component","update","$$","e","pop","callback","has","add","fragment","before_update","dirty","ctx","after_update","dispatch","direction","kind","dispatchEvent","type","detail","bubbles","cancelable","CustomEvent","custom_event","outroing","outros","transition_in","block","local","transition_out","o","d","null_transition","create_bidirectional_transition","params","intro","original_inert_value","config","running_program","pending_program","animation_name","clear_animation","init","program","Math","abs","start","end","group","go","easing","linear","tick","css","r","undefined","inert","fulfill","loop","then","ensure_array_like","array_like_or_iterator","Array","from","destroy_component","detaching","filtered","targets","flush_render_callbacks","on_destroy","make_dirty","fill","instance","create_fragment","not_equal","props","append_styles","parent_component","bound","on_mount","on_disconnect","context","callbacks","skip_bound","ready","ret","rest","hydrate","nodes","childNodes","children","l","m","new_on_destroy","map","mount_component","SvelteComponent","$$set","$destroy","this","$on","index","splice","$set","obj","keys","fade","getComputedStyle","opacity","__svelte","v","module","main","global","isWorker","workerSize","canUseWorker","Worker","Blob","OffscreenCanvas","OffscreenCanvasRenderingContext2D","HTMLCanvasElement","prototype","transferControlToOffscreen","URL","createObjectURL","canUsePaths","Path2D","DOMMatrix","canDrawBitmap","canvas","getContext","fillRect","bitmap","transferToImageBitmap","createPattern","func","ModulePromise","exports","Prom","skipTransform","frame","cancel","TIME","frames","lastFrameTime","worker","prom","resolves","defaultFire","bitmapMapper","transform","width","height","drawImage","floor","cancelAnimationFrame","id","random","onFrame","time","setTimeout","timer","clearTimeout","getWorker","code","toString","console","warn","execute","postMessage","offscreen","fire","done","slice","workerDone","msg","bind","reset","decorate","defaults","particleCount","angle","spread","startVelocity","decay","gravity","drift","ticks","y","shapes","zIndex","colors","disableForReducedMotion","scalar","prop","val","convert","onlyPositiveInt","number","toDecimal","parseInt","colorsToRgb","hexToRgb","String","replace","substring","g","setCanvasWindowSize","documentElement","clientWidth","clientHeight","setCanvasRectSize","rect","getBoundingClientRect","updateFetti","fetti","cos","angle2D","velocity","sin","flat","wobble","wobbleX","wobbleY","tiltSin","tiltCos","wobbleSpeed","tiltAngle","progress","totalTicks","x1","y1","x2","y2","fillStyle","color","beginPath","shape","path","isArray","matrix","pathString","pathMatrix","scaleX","scaleY","rotation","path2d","t1","addPath","t2","transformPath2D","PI","multiplySelf","pattern","setTransform","globalAlpha","ellipse","ovalScalar","radiusX","radiusY","startAngle","endAngle","antiClockwise","save","translate","rotate","scale","arc","restore","rot","innerRadius","outerRadius","spikes","lineTo","moveTo","closePath","confettiCannon","globalOpts","animationObj","isLibCanvas","allowResize","hasResizeEventRegistered","globalDisableForReducedMotion","Boolean","resizer","initialized","__confetti_initialized","preferLessMotion","matchMedia","matches","fireLocal","opts","radAngle","radSpread","min","max","Number","origin","getOrigin","temp","fettis","startX","startY","addFettis","animationFrame","destroy","animatingFettis","onDone","clearRect","concat","animate","position","top","left","pointerEvents","getCanvas","body","onResize","resize","contains","getDefaultFire","useWorker","apply","arguments","shapeFromPath","pathData","Error","tempCtx","maxSize","minX","minY","maxX","maxY","isPointInPath","round","shapeFromText","textData","fontFamily","fontSize","font","measureText","ceil","actualBoundingBoxRight","actualBoundingBoxLeft","actualBoundingBoxAscent","actualBoundingBoxDescent","padding","fillText","self","confetti","question","picture","create_if_block_3","create_if_block_2","div1","div0","t0","t0_value","iterations","div","t3_value","button","img","img_src_value","h1","questions","answer","currentQuestionIndex","score","selectedOption","showResult","resultsReady","selectAnswer","option","$$invalidate"],"mappings":"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"}